[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Gestiona la ejecución de hilos para operaciones de consulta concurrentes\r\nCambia entre diferentes hilos de ejecución de consultas por ID\r\nPermite crear distintos hilos usando una instancia de QueryBuilder\r\nEvita tener que crear instancias múltiples"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "thread"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Gestiona la ejecución de hilos para operaciones de consulta concurrentes\r\nCambia entre diferentes hilos de ejecución de consultas por ID\r\nPermite crear distintos hilos usando una instancia de QueryBuilder\r\nEvita tener que crear instancias múltiples",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Identificador del hilo al cual cambiar o crear",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "id"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "// Crear o cambiar al hilo 'main'\r\nqb.thread('main').select('*').from('users');\r\n\r\n// Cambiar a un hilo diferente\r\nqb.thread('secondary').select('count(*)').from('orders');",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 297,
        "column": 1,
        "index": 10149
      },
      "end": {
        "line": 315,
        "column": 4,
        "index": 10879
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 316,
          "column": 1,
          "index": 10882
        },
        "end": {
          "line": 331,
          "column": 2,
          "index": 11374
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Crear o cambiar al hilo 'main'\r\nqb.thread('main').select('*').from('users');\r\n\r\n// Cambiar a un hilo diferente\r\nqb.thread('secondary').select('count(*)').from('orders');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "id",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Identificador del hilo al cual cambiar o crear"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "thread",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "thread",
        "kind": "function"
      }
    ],
    "namespace": "thread"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Instancia y configura el Driver para la base de datos que ejecutara los comandos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "driver"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Instancia y configura el Driver para la base de datos que ejecutara los comandos",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Clase del controlador de base de datos (MySqlDriver, PostgreSQLDriver, etc.)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Driver"
        },
        "name": "driverClass"
      },
      {
        "title": "param",
        "description": "Parámetros de conexión y configuración del controlador",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "params"
      },
      {
        "title": "param",
        "description": "Instancia de QueryBuilder",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        },
        "name": "qb"
      },
      {
        "title": "returns",
        "description": "qb - Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "import MySQL from '@querybuilder/mysql';\r\nimport config from './config.js';\r\nconst mysql= config.MYSQL;\r\nconst qb = new QueryBuilder(MySQL);\r\nqb.driver(mysql.driver, mysql.params);",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 443,
        "column": 1,
        "index": 14560
      },
      "end": {
        "line": 461,
        "column": 4,
        "index": 15304
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 462,
          "column": 1,
          "index": 15307
        },
        "end": {
          "line": 467,
          "column": 2,
          "index": 15478
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import MySQL from '@querybuilder/mysql';\r\nimport config from './config.js';\r\nconst mysql= config.MYSQL;\r\nconst qb = new QueryBuilder(MySQL);\r\nqb.driver(mysql.driver, mysql.params);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "driverClass",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Clase del controlador de base de datos (MySqlDriver, PostgreSQLDriver, etc.)"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Driver"
        }
      },
      {
        "title": "param",
        "name": "params",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Parámetros de conexión y configuración del controlador"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "qb",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de QueryBuilder"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "qb - Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "driver",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "driver",
        "kind": "function"
      }
    ],
    "namespace": "driver"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Gestiona el cambio de base de datos dentro del mismo servidor (SGBD)"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "use"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Gestiona el cambio de base de datos dentro del mismo servidor (SGBD)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre de la base de datos",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "database"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 472,
        "column": 1,
        "index": 15713
      },
      "end": {
        "line": 480,
        "column": 4,
        "index": 16085
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 481,
          "column": 1,
          "index": 16088
        },
        "end": {
          "line": 491,
          "column": 2,
          "index": 16377
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "database",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la base de datos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "use",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "use",
        "kind": "function"
      }
    ],
    "namespace": "use"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Comprueba en tiempo de ejecucion que los tipos de \"tables\" corresponden con los de \"alias\"\r\ny que la longitud de los arrays sea la correcta."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "checkFrom"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Comprueba en tiempo de ejecucion que los tipos de \"tables\" corresponden con los de \"alias\"\r\ny que la longitud de los arrays sea la correcta.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "tabla o lista de tablas",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "tables"
      },
      {
        "title": "param",
        "description": "alias o lista de alias",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "alias"
      },
      {
        "title": "throws",
        "description": "Si los tipos o longitudes no coinciden",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "checkFrom(\"tabla\", \"t\");\r\ncheckFrom([\"tabla1\", \"tabla2\"], [\"t1\", \"t2\"]);\r\ncheckFrom(\"tabla\", [\"t1\", \"t2\"]); // Error\r\ncheckFrom([\"tabla1\", \"tabla2\"], \"t1\"); // Error\r\ncheckFrom([\"tabla1\", \"tabla2\"], [\"t1\"]); // Error\r\ncheckFrom(\"tabla\", \"t1\", \"t2\"); // Error\r\ncheckFrom([\"tabla1\", \"tabla2\"], [\"t1\", \"t2\", \"t3\"]); // Válido",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 1120,
        "column": 1,
        "index": 39722
      },
      "end": {
        "line": 1137,
        "column": 4,
        "index": 40515
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1138,
          "column": 1,
          "index": 40518
        },
        "end": {
          "line": 1160,
          "column": 2,
          "index": 41179
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "checkFrom(\"tabla\", \"t\");\r\ncheckFrom([\"tabla1\", \"tabla2\"], [\"t1\", \"t2\"]);\r\ncheckFrom(\"tabla\", [\"t1\", \"t2\"]); // Error\r\ncheckFrom([\"tabla1\", \"tabla2\"], \"t1\"); // Error\r\ncheckFrom([\"tabla1\", \"tabla2\"], [\"t1\"]); // Error\r\ncheckFrom(\"tabla\", \"t1\", \"t2\"); // Error\r\ncheckFrom([\"tabla1\", \"tabla2\"], [\"t1\", \"t2\", \"t3\"]); // Válido"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "tables",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "tabla o lista de tablas"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "alias",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "alias o lista de alias"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Si los tipos o longitudes no coinciden"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "checkFrom",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "checkFrom",
        "kind": "function"
      }
    ],
    "namespace": "checkFrom"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una instancia de Column para referenciar columnas en consultas SQL.\r\nPermite especificar el nombre de la columna y opcionalmente el nombre o alias de la tabla.\r\nFacilita la construcción de consultas SQL tipadas y con contexto de tabla."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "col"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una instancia de Column para referenciar columnas en consultas SQL.\r\nPermite especificar el nombre de la columna y opcionalmente el nombre o alias de la tabla.\r\nFacilita la construcción de consultas SQL tipadas y con contexto de tabla.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Puede ser el nombre de la columna, una subconsulta o una expresion",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            },
            {
              "type": "NameExpression",
              "name": "Expresion"
            }
          ]
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Nombre de la tabla o alias para la columna",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "table"
      },
      {
        "title": "returns",
        "description": "Instancia de Column para su uso en consultas",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Column"
        }
      },
      {
        "title": "throws",
        "description": "Cuando los parámetros no coinciden con los tipos esperados",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Referencia simple de columna\r\nconst userCol = qb.col('name', 'users'); // users.name\r\n\r\n// Use in queries\r\nqb.select([qb.col('name', 'u'), qb.col('email', 'u')]) // SELECT u.name, u.email\r\n  .from('users', 'u')\r\n  .where(qb.eq(qb.col('active', 'u'), 1)); // WHERE u.active = 1\r\n// Subconsulta como columna\r\nconst subQb = new QueryBuilder().select('COUNT(*)').from('orders').where(qb.eq(qb.col('user_id'), qb.col('id', 'u')));\r\nconst orderCountCol = qb.col(subQb, 'u'); // (SELECT COUNT(*) FROM orders WHERE user_id = u.id) AS order_count",
        "lineNumber": 11
      }
    ],
    "loc": {
      "start": {
        "line": 1784,
        "column": 1,
        "index": 66582
      },
      "end": {
        "line": 1808,
        "column": 4,
        "index": 67853
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1809,
          "column": 1,
          "index": 67856
        },
        "end": {
          "line": 1821,
          "column": 2,
          "index": 68204
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Referencia simple de columna\r\nconst userCol = qb.col('name', 'users'); // users.name\r\n\r\n// Use in queries\r\nqb.select([qb.col('name', 'u'), qb.col('email', 'u')]) // SELECT u.name, u.email\r\n  .from('users', 'u')\r\n  .where(qb.eq(qb.col('active', 'u'), 1)); // WHERE u.active = 1\r\n// Subconsulta como columna\r\nconst subQb = new QueryBuilder().select('COUNT(*)').from('orders').where(qb.eq(qb.col('user_id'), qb.col('id', 'u')));\r\nconst orderCountCol = qb.col(subQb, 'u'); // (SELECT COUNT(*) FROM orders WHERE user_id = u.id) AS order_count"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Puede ser el nombre de la columna, una subconsulta o una expresion"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            },
            {
              "type": "NameExpression",
              "name": "Expresion"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "table",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la tabla o alias para la columna"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de Column para su uso en consultas"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Column"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando los parámetros no coinciden con los tipos esperados"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "col",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "col",
        "kind": "function"
      }
    ],
    "namespace": "col"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una instancia de Column con el nombre de la tabla primero y luego el nombre de la columna.\r\nEs igual a col cambiando el orden de los parametros"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "coltn"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una instancia de Column con el nombre de la tabla primero y luego el nombre de la columna.\r\nEs igual a col cambiando el orden de los parametros",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la tabla",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "table"
      },
      {
        "title": "param",
        "description": "nombre de la columna",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "returns",
        "description": "Instancia de Column para su uso en consultas",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Column"
        }
      },
      {
        "title": "throws",
        "description": "Cuando los parámetros no coinciden con los tipos esperados",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Referencia simple de columna\r\nconst userCol = qb.coltn('users', 'name'); // users.name\r\n\r\n// Usar en consultas\r\nqb.select([qb.coltn('u', 'name'), qb.coltn('u', 'email')]) // SELECT u.name, u.email\r\n  .from('users', 'u')\r\n  .where(qb.eq(qb.coltn('u', 'active'), 1)); // WHERE u.active = 1\r\n// Subconsulta como columna\r\nconst subQb = new QueryBuilder().select('COUNT(*)').from('orders').where(qb.eq(qb.coltn('', 'user_id'), qb.coltn('u', 'id')));\r\nconst orderCountCol = qb.coltn('u', subQb); // (SELECT COUNT(*) FROM orders WHERE user_id = u.id) AS order_count",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1822,
        "column": 1,
        "index": 68207
      },
      "end": {
        "line": 1845,
        "column": 4,
        "index": 69311
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1846,
          "column": 1,
          "index": 69314
        },
        "end": {
          "line": 1857,
          "column": 2,
          "index": 69636
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Referencia simple de columna\r\nconst userCol = qb.coltn('users', 'name'); // users.name\r\n\r\n// Usar en consultas\r\nqb.select([qb.coltn('u', 'name'), qb.coltn('u', 'email')]) // SELECT u.name, u.email\r\n  .from('users', 'u')\r\n  .where(qb.eq(qb.coltn('u', 'active'), 1)); // WHERE u.active = 1\r\n// Subconsulta como columna\r\nconst subQb = new QueryBuilder().select('COUNT(*)').from('orders').where(qb.eq(qb.coltn('', 'user_id'), qb.coltn('u', 'id')));\r\nconst orderCountCol = qb.coltn('u', subQb); // (SELECT COUNT(*) FROM orders WHERE user_id = u.id) AS order_count"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "table",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la tabla"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la columna"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de Column para su uso en consultas"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Column"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando los parámetros no coinciden con los tipos esperados"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "coltn",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "coltn",
        "kind": "function"
      }
    ],
    "namespace": "coltn"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una instancia de expresion para usar en consultas SQL.\r\nPermite incluir expresiones SQL complejas o funciones agregadas en consultas.\r\nFacilita la construcción de consultas SQL dinámicas y avanzadas.\r\nusando el metodo as() de la clase Expresion se puede asignar un alias a la expresion"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "exp"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una instancia de expresion para usar en consultas SQL.\r\nPermite incluir expresiones SQL complejas o funciones agregadas en consultas.\r\nFacilita la construcción de consultas SQL dinámicas y avanzadas.\r\nusando el metodo as() de la clase Expresion se puede asignar un alias a la expresion",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "any"
        },
        "name": "expresion"
      },
      {
        "title": "returns",
        "description": "expresion.value = expresion",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Expresion"
        }
      },
      {
        "title": "example",
        "description": "´´javascript\r\nlet qb = new QueryBuilder()\r\nqb.exp(\"count(*)\") // count(*)\r\nqb.exp(\"count(*)\").as(\"Total\") // count(*) AS Total\r\nqb.exp(\"sum(*)\").as(\"Total\") // sum(*) AS Total\r\nqb.exp(\"avg(*)\").as(\"Total\") // avg(*) AS Total",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1858,
        "column": 1,
        "index": 69639
      },
      "end": {
        "line": 1876,
        "column": 4,
        "index": 70372
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1877,
          "column": 1,
          "index": 70375
        },
        "end": {
          "line": 1879,
          "column": 2,
          "index": 70431
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "´´javascript\r\nlet qb = new QueryBuilder()\r\nqb.exp(\"count(*)\") // count(*)\r\nqb.exp(\"count(*)\").as(\"Total\") // count(*) AS Total\r\nqb.exp(\"sum(*)\").as(\"Total\") // sum(*) AS Total\r\nqb.exp(\"avg(*)\").as(\"Total\") // avg(*) AS Total"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "expresion",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "any"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "expresion.value = expresion"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Expresion"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "exp",
    "memberof": "QueryBuilder.Core",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "exp",
        "kind": "function"
      }
    ],
    "namespace": "exp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Genera la cadena de consulta SQL completa desde la consulta construida\r\nÚtil para depuración, registro, copia, etc. del comando SQL final"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "toString"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 3
      },
      {
        "title": "async",
        "description": null,
        "lineNumber": 4
      },
      {
        "title": "description",
        "description": "Genera la cadena de consulta SQL completa desde la consulta construida\r\nÚtil para depuración, registro, copia, etc. del comando SQL final",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Opciones de formato para la salida",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        },
        "name": "options"
      },
      {
        "title": "returns",
        "description": "La cadena de consulta SQL completa",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "// Construir y obtener cadena de consulta\r\nconst sql = await qb.select('*').from('users').where('active = 1').toString();\r\nconsole.log(sql); // \"SELECT * FROM users WHERE active = 1\"\r\n\r\n// Consulta compleja con joins\r\nconst complexSql = await qb\r\n  .select(['u.name', 'p.title'])\r\n  .from('users', 'u')\r\n  .join('posts', 'p', 'u.id = p.user_id')\r\n  .where('u.active = 1')\r\n  .toString();",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 2566,
        "column": 1,
        "index": 97254
      },
      "end": {
        "line": 2590,
        "column": 4,
        "index": 98083
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2592,
          "column": 1,
          "index": 98131
        },
        "end": {
          "line": 2596,
          "column": 2,
          "index": 98254
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Construir y obtener cadena de consulta\r\nconst sql = await qb.select('*').from('users').where('active = 1').toString();\r\nconsole.log(sql); // \"SELECT * FROM users WHERE active = 1\"\r\n\r\n// Consulta compleja con joins\r\nconst complexSql = await qb\r\n  .select(['u.name', 'p.title'])\r\n  .from('users', 'u')\r\n  .join('posts', 'p', 'u.id = p.user_id')\r\n  .where('u.active = 1')\r\n  .toString();"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones de formato para la salida"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "La cadena de consulta SQL completa"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "toString",
    "memberof": "QueryBuilder.Core",
    "async": true,
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toString",
        "kind": "function"
      }
    ],
    "namespace": "toString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Ejecuta la consulta construida contra el controlador de base de datos configurado\r\nEnvía la consulta a la base de datos y retorna resultados o errores\r\nSi testOnly es true, retorna la cadena de consulta sin ejecutar"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "execute"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Core",
        "lineNumber": 3
      },
      {
        "title": "async",
        "description": null,
        "lineNumber": 4
      },
      {
        "title": "description",
        "description": "Ejecuta la consulta construida contra el controlador de base de datos configurado\r\nEnvía la consulta a la base de datos y retorna resultados o errores\r\nSi testOnly es true, retorna la cadena de consulta sin ejecutar",
        "lineNumber": 5
      },
      {
        "title": "param",
        "description": "Si es true, retorna la cadena de consulta sin ejecutar",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "testOnly",
        "default": "false"
      },
      {
        "title": "returns",
        "description": "Instancia de QueryBuilder con resultados o errores",
        "lineNumber": 10,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      },
      {
        "title": "throws",
        "description": "Cuando no hay controlador de base de datos configurado",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Ejecutar consulta y obtener resultados\r\nconst result = await qb.select('*').from('users').where('active = 1').execute();",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 2597,
        "column": 1,
        "index": 98257
      },
      "end": {
        "line": 2614,
        "column": 4,
        "index": 98997
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2615,
          "column": 1,
          "index": 99000
        },
        "end": {
          "line": 2637,
          "column": 2,
          "index": 99848
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Ejecutar consulta y obtener resultados\r\nconst result = await qb.select('*').from('users').where('active = 1').execute();"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "testOnly",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Si es true, retorna la cadena de consulta sin ejecutar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "default": "false"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de QueryBuilder con resultados o errores"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando no hay controlador de base de datos configurado"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "execute",
    "memberof": "QueryBuilder.Core",
    "async": true,
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "execute",
        "kind": "function"
      }
    ],
    "namespace": "execute"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una base de datos dentro del servidor (SGBD)"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createDatabase"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una base de datos dentro del servidor (SGBD)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre de la base de datos",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Opciones para la creacion de datos",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createDatabase('mydb', { ifNotExists: true });\r\n\t// Resultado esperado: { success: true, database: 'mydb' }",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 495,
        "column": 1,
        "index": 16569
      },
      "end": {
        "line": 509,
        "column": 4,
        "index": 17133
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 510,
          "column": 1,
          "index": 17136
        },
        "end": {
          "line": 518,
          "column": 2,
          "index": 17412
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createDatabase('mydb', { ifNotExists: true });\r\n\t// Resultado esperado: { success: true, database: 'mydb' }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la base de datos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones para la creacion de datos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createDatabase",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createDatabase",
        "kind": "function"
      }
    ],
    "namespace": "createDatabase"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Elimina una base de datos del servidor (SGBD)"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "dropDatabase"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Elimina una base de datos del servidor (SGBD)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la base de datos",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Opciones",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.dropDatabase('mydb');\r\n\t// Resultado esperado: { success: true, database: 'mydb' }",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 520,
        "column": 1,
        "index": 17417
      },
      "end": {
        "line": 534,
        "column": 4,
        "index": 17923
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 535,
          "column": 1,
          "index": 17926
        },
        "end": {
          "line": 543,
          "column": 2,
          "index": 18185
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.dropDatabase('mydb');\r\n\t// Resultado esperado: { success: true, database: 'mydb' }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la base de datos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "dropDatabase",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropDatabase",
        "kind": "function"
      }
    ],
    "namespace": "dropDatabase"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea un \"esquema\" o \"tabla\" de nombres para organizar objetos de base de datos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createSchema"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea un \"esquema\" o \"tabla\" de nombres para organizar objetos de base de datos",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre del esquema",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Opciones",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createSchema('myschema', { ifNotExists: true });",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 544,
        "column": 1,
        "index": 18188
      },
      "end": {
        "line": 557,
        "column": 4,
        "index": 18681
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 558,
          "column": 1,
          "index": 18684
        },
        "end": {
          "line": 566,
          "column": 2,
          "index": 18945
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createSchema('myschema', { ifNotExists: true });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre del esquema"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createSchema",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createSchema",
        "kind": "function"
      }
    ],
    "namespace": "createSchema"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Elimina un esquema de la base de datos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "dropSchema"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Elimina un esquema de la base de datos",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre del esquema",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Opciones",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 568,
        "column": 1,
        "index": 18950
      },
      "end": {
        "line": 577,
        "column": 4,
        "index": 19327
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 578,
          "column": 1,
          "index": 19330
        },
        "end": {
          "line": 581,
          "column": 2,
          "index": 19467
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre del esquema"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "dropSchema",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropSchema",
        "kind": "function"
      }
    ],
    "namespace": "dropSchema"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una nueva tabla con el nombre y las opciones especificadas en la base de datos actual."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createTable"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una nueva tabla con el nombre y las opciones especificadas en la base de datos actual.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "El nombre de la tabla.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Opciones de configuración para la tabla.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto donde cada clave es el nombre de la columna.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options.cols"
      },
      {
        "title": "param",
        "description": "[].column - columna name:<string|column>",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "type"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        },
        "name": "options.cols"
      },
      {
        "title": "param",
        "description": "GLOBAL|LOCAL.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "GLOBAL"
              },
              {
                "type": "NameExpression",
                "name": "LOCAL"
              }
            ]
          }
        },
        "name": "options.temporary"
      },
      {
        "title": "param",
        "description": "ON COMMIT PRESERVE|DELETE",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "PRESERVE"
              },
              {
                "type": "NameExpression",
                "name": "DELETE"
              }
            ]
          }
        },
        "name": "options.onCommit"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 583,
        "column": 1,
        "index": 19472
      },
      "end": {
        "line": 597,
        "column": 4,
        "index": 20250
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 598,
          "column": 1,
          "index": 20253
        },
        "end": {
          "line": 611,
          "column": 2,
          "index": 20678
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "El nombre de la tabla."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones de configuración para la tabla."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.cols",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Objeto donde cada clave es el nombre de la columna."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          },
          {
            "title": "param",
            "name": "options.cols",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "[].column - columna name:<string|column>"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "type"
                },
                {
                  "type": "NameExpression",
                  "name": "column"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "options.temporary",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "GLOBAL|LOCAL."
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "GLOBAL"
                  },
                  {
                    "type": "NameExpression",
                    "name": "LOCAL"
                  }
                ]
              }
            }
          },
          {
            "title": "param",
            "name": "options.onCommit",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "ON COMMIT PRESERVE|DELETE"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "PRESERVE"
                  },
                  {
                    "type": "NameExpression",
                    "name": "DELETE"
                  }
                ]
              }
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createTable",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createTable",
        "kind": "function"
      }
    ],
    "namespace": "createTable"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Modifica una tabla existente"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "alterTable"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Modifica una tabla existente",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre de la tabla",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.alterTable('mytable', { addColumn: 'new_column' });",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 612,
        "column": 1,
        "index": 20681
      },
      "end": {
        "line": 624,
        "column": 4,
        "index": 21085
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 625,
          "column": 1,
          "index": 21088
        },
        "end": {
          "line": 629,
          "column": 2,
          "index": 21257
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.alterTable('mytable', { addColumn: 'new_column' });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la tabla"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "alterTable",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "alterTable",
        "kind": "function"
      }
    ],
    "namespace": "alterTable"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Define los comandos que modifican la estructura de las columnas de la tabla actual.\r\n\"addColumn\" añade una columna\r\n\"alterColumn\" modifica una columna existente\r\n\"dropColumn\" elimina una columna\r\ny \"addConstraint\" añade una restricción\r\nEstos comandos deben ser llamados después de un \"alterTable\" donde se especifica la tabla a modificar.\r\ncada uno recibe tres parametros:"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "alterTableComands"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Define los comandos que modifican la estructura de las columnas de la tabla actual.\r\n\"addColumn\" añade una columna\r\n\"alterColumn\" modifica una columna existente\r\n\"dropColumn\" elimina una columna\r\ny \"addConstraint\" añade una restricción\r\nEstos comandos deben ser llamados después de un \"alterTable\" donde se especifica la tabla a modificar.\r\ncada uno recibe tres parametros:",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la columna",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "opciones aplicables",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.alterTable('mytable')\r\n  .addColumn('new_column', { type: 'VARCHAR(255)', notNull: true })\r\n  .alterColumn('existing_column', { type: 'INT' })\r\n  .dropColumn('old_column')\r\n  .addConstraint('pk_mytable', { type: 'PRIMARY KEY', columns: ['id'] });\r\n\r\n*",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 630,
        "column": 1,
        "index": 21260
      },
      "end": {
        "line": 653,
        "column": 5,
        "index": 22306
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 654,
          "column": 1,
          "index": 22309
        },
        "end": {
          "line": 692,
          "column": 2,
          "index": 23646
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.alterTable('mytable')\r\n  .addColumn('new_column', { type: 'VARCHAR(255)', notNull: true })\r\n  .alterColumn('existing_column', { type: 'INT' })\r\n  .dropColumn('old_column')\r\n  .addConstraint('pk_mytable', { type: 'PRIMARY KEY', columns: ['id'] });\r\n\r\n*"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la columna"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "alterTableComands",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "alterTableComands",
        "kind": "function"
      }
    ],
    "namespace": "alterTableComands"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Elimina una tabla de la base de datos actual"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "dropTable"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Elimina una tabla de la base de datos actual",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la tabla",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "opciones aplicables",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "option"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.dropTable('mytable', { ifExists: true });",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 693,
        "column": 1,
        "index": 23649
      },
      "end": {
        "line": 706,
        "column": 4,
        "index": 24108
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 707,
          "column": 1,
          "index": 24111
        },
        "end": {
          "line": 710,
          "column": 2,
          "index": 24249
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.dropTable('mytable', { ifExists: true });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la tabla"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "option",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "dropTable",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropTable",
        "kind": "function"
      }
    ],
    "namespace": "dropTable"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea un tipo definido por el usuario en la base de datos actual"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createType"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea un tipo definido por el usuario en la base de datos actual",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre del tipo",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "opciones aplicables",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "option"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createType('mytype', { ... });",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 711,
        "column": 1,
        "index": 24252
      },
      "end": {
        "line": 725,
        "column": 4,
        "index": 24722
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 726,
          "column": 1,
          "index": 24725
        },
        "end": {
          "line": 734,
          "column": 2,
          "index": 24982
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createType('mytype', { ... });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre del tipo"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "option",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createType",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createType",
        "kind": "function"
      }
    ],
    "namespace": "createType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Elimina un tipo definido por el usuario"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "dropType"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Elimina un tipo definido por el usuario",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre del tipo",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "opciones aplicables",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "option"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.dropType('mytype', { ifExists: true });",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 735,
        "column": 1,
        "index": 24985
      },
      "end": {
        "line": 748,
        "column": 4,
        "index": 25433
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 749,
          "column": 1,
          "index": 25436
        },
        "end": {
          "line": 757,
          "column": 2,
          "index": 25676
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.dropType('mytype', { ifExists: true });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre del tipo"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "option",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "dropType",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropType",
        "kind": "function"
      }
    ],
    "namespace": "dropType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Permite crear una restricción a nivel de base de datos.\r\nEs una característica del\r\nSQL estándar (SQL-92 y SQL:2006) que permite definir restricciones a nivel de base de datos.\r\nSirve para imponer condiciones que no pueden expresarse fácilmente con restricciones en columnas (CHECK) o en tablas (FOREIGN KEY).\r\nNo está implementado en MySQL ni en PostgreSQL."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQL estándar\t✅"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t\t❌"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t\t❌\r\nEn su lugar, se pueden usar triggers (BEFORE INSERT/UPDATE/DELETE) o funciones con restricciones CHECK a nivel de tabla."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createAssertion"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Permite crear una restricción a nivel de base de datos.\r\nEs una característica del\r\nSQL estándar (SQL-92 y SQL:2006) que permite definir restricciones a nivel de base de datos.\r\nSirve para imponer condiciones que no pueden expresarse fácilmente con restricciones en columnas (CHECK) o en tablas (FOREIGN KEY).\r\nNo está implementado en MySQL ni en PostgreSQL.\r\n- SQL estándar\t✅\r\n- PostgreSQL\t\t❌\r\n- MySQL\t\t\t\t❌\r\nEn su lugar, se pueden usar triggers (BEFORE INSERT/UPDATE/DELETE) o funciones con restricciones CHECK a nivel de tabla.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "opciones aplicables",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "assertion"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createAssertion('positive_balance', {\r\n  check: 'balance > 0'\r\n});",
        "lineNumber": 17
      }
    ],
    "loc": {
      "start": {
        "line": 758,
        "column": 1,
        "index": 25679
      },
      "end": {
        "line": 781,
        "column": 4,
        "index": 26685
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 782,
          "column": 1,
          "index": 26688
        },
        "end": {
          "line": 793,
          "column": 2,
          "index": 26981
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createAssertion('positive_balance', {\r\n  check: 'balance > 0'\r\n});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "assertion",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createAssertion",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createAssertion",
        "kind": "function"
      }
    ],
    "namespace": "createAssertion"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Permite definir tipos de datos personalizados con restricciones.\r\nEs útil para reutilizar reglas de validación en múltiples tablas sin repetir código."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQL estándar\t✅"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t\t✅"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t\t❌"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createDomain"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Permite definir tipos de datos personalizados con restricciones.\r\nEs útil para reutilizar reglas de validación en múltiples tablas sin repetir código.\r\n- SQL estándar\t✅\r\n- PostgreSQL\t\t✅\r\n- MySQL\t\t\t\t❌",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre del dominio",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Opciones aplicables",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createDomain('mydomain', {\r\n  type: 'text',\r\n  constraints: {\r\n    notNull: true\r\n  }\r\n});",
        "lineNumber": 13
      }
    ],
    "loc": {
      "start": {
        "line": 794,
        "column": 1,
        "index": 26984
      },
      "end": {
        "line": 816,
        "column": 4,
        "index": 27687
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 817,
          "column": 1,
          "index": 27690
        },
        "end": {
          "line": 825,
          "column": 2,
          "index": 27956
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createDomain('mydomain', {\r\n  type: 'text',\r\n  constraints: {\r\n    notNull: true\r\n  }\r\n});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del dominio"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createDomain",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createDomain",
        "kind": "function"
      }
    ],
    "namespace": "createDomain"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Permite definir una consulta almacenada como un objeto de la base de datos.\r\nSe comporta como una 'tabla virtual', mostrando datos obtenidos de una o varias tablas sin duplicarlos."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t✅\tSoporta vistas materializadas con \"REFRESH MATERIALIZED VIEW\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t✅\tSoporta vistas pero no vistas materializadas"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQL Server\t✅\tSoporta vistas indexadas para mejorar rendimiento"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQLite\t\t\t❌\tNo permite vistas materializadas ni indexadas"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Oracle\t\t\t✅\tSoporta vistas normales y materializadas"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createView"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Permite definir una consulta almacenada como un objeto de la base de datos.\r\nSe comporta como una 'tabla virtual', mostrando datos obtenidos de una o varias tablas sin duplicarlos.\r\n\r\n- PostgreSQL\t✅\tSoporta vistas materializadas con \"REFRESH MATERIALIZED VIEW\"\r\n- MySQL\t\t\t✅\tSoporta vistas pero no vistas materializadas\r\n- SQL Server\t✅\tSoporta vistas indexadas para mejorar rendimiento\r\n- SQLite\t\t\t❌\tNo permite vistas materializadas ni indexadas\r\n- Oracle\t\t\t✅\tSoporta vistas normales y materializadas",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la vista",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "opciones aplicables {cols:Array<string>, as:Select, check:boolean}",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createView('myview', {\r\n  cols: ['id', 'name'],\r\n  as: qb.select().from('mytable'),\r\n  check: true\r\n});",
        "lineNumber": 16
      }
    ],
    "loc": {
      "start": {
        "line": 826,
        "column": 1,
        "index": 27959
      },
      "end": {
        "line": 850,
        "column": 4,
        "index": 29027
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 851,
          "column": 1,
          "index": 29030
        },
        "end": {
          "line": 862,
          "column": 2,
          "index": 29308
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createView('myview', {\r\n  cols: ['id', 'name'],\r\n  as: qb.select().from('mytable'),\r\n  check: true\r\n});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la vista"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables {cols:Array"
                },
                {
                  "type": "html",
                  "value": "<string>"
                },
                {
                  "type": "text",
                  "value": ", as:Select, check:boolean}"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createView",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createView",
        "kind": "function"
      }
    ],
    "namespace": "createView"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Elimina una vista creada previamente"
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t✅"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t✅"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "dropView"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Elimina una vista creada previamente\r\n- PostgreSQL\t✅\r\n- MySQL\t\t\t✅",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre de la vista",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.dropView('myview');",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 863,
        "column": 1,
        "index": 29311
      },
      "end": {
        "line": 877,
        "column": 4,
        "index": 29726
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 878,
          "column": 1,
          "index": 29729
        },
        "end": {
          "line": 886,
          "column": 2,
          "index": 29974
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.dropView('myview');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la vista"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "dropView",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropView",
        "kind": "function"
      }
    ],
    "namespace": "dropView"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crear un nuevo rol en la base de datos.\r\nUn rol es una entidad que puede representar a un usuario o un grupo de usuarios y\r\npuede recibir permisos para acceder a ciertos recursos."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t✅ Maneja roles en lugar de usuarios individuales"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t\t✅ (Desde 8.0)\tSe complementa con \"GRANT\" para asignar permisos"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQL Server\t✅ Se usa \"CREATE ROLE\" pero los usuarios son \"entidades separadas\""
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQLite\t\t\t❌ No soporta roles ni usuarios"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Oracle\t\t\t✅ Soporta roles con permisos avanzados"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MongoDB\t\t\t✅\tUsando \"createRole\" y \"db.createUser\""
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createRoles"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crear un nuevo rol en la base de datos.\r\nUn rol es una entidad que puede representar a un usuario o un grupo de usuarios y\r\npuede recibir permisos para acceder a ciertos recursos.\r\n- PostgreSQL\t✅ Maneja roles en lugar de usuarios individuales\r\n- MySQL\t\t\t\t✅ (Desde 8.0)\tSe complementa con \"GRANT\" para asignar permisos\r\n- SQL Server\t✅ Se usa \"CREATE ROLE\" pero los usuarios son \"entidades separadas\"\r\n- SQLite\t\t\t❌ No soporta roles ni usuarios\r\n- Oracle\t\t\t✅ Soporta roles con permisos avanzados\r\n- MongoDB\t\t\t✅\tUsando \"createRole\" y \"db.createUser\"",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre o nombres de roles a crear",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "names"
      },
      {
        "title": "param",
        "description": "WITH ADMIN",
        "lineNumber": 14,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "CURRENT_USER"
            },
            {
              "type": "StringLiteralType",
              "value": "CURRENT_ROLE"
            }
          ]
        },
        "name": "options.admin"
      },
      {
        "title": "param",
        "description": "IF NOT EXISTS",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.ifNotExists"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.createRoles(['admin', 'editor'], { ifNotExists: true });\r\n// Resultado esperado: { success: true, roles: ['admin', 'editor'] }",
        "lineNumber": 18
      }
    ],
    "loc": {
      "start": {
        "line": 891,
        "column": 1,
        "index": 30164
      },
      "end": {
        "line": 914,
        "column": 4,
        "index": 31308
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 915,
          "column": 1,
          "index": 31311
        },
        "end": {
          "line": 923,
          "column": 2,
          "index": 31564
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createRoles(['admin', 'editor'], { ifNotExists: true });\r\n// Resultado esperado: { success: true, roles: ['admin', 'editor'] }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "names",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre o nombres de roles a crear"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createRoles",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createRoles",
        "kind": "function"
      }
    ],
    "namespace": "createRoles"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Elimina el rol o roles especificados de la base de datos."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t✅"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t\t✅ (Desde 8.0)"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "dropRoles"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DDL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Elimina el rol o roles especificados de la base de datos.\r\n- PostgreSQL\t✅\r\n- MySQL\t\t\t\t✅ (Desde 8.0)",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "uno o varios roles a eliminar",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "names"
      },
      {
        "title": "param",
        "description": "opciones aplicables",
        "lineNumber": 8,
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          },
          "prefix": true
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "IF EXISTS",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.ifExists"
      },
      {
        "title": "param",
        "description": "\"CASCADE\"/\"RESTRICT\"",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.cascade"
      },
      {
        "title": "param",
        "description": "\"RESTRICT\"/\"CASCADE\"",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.restrict"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 924,
        "column": 1,
        "index": 31567
      },
      "end": {
        "line": 938,
        "column": 4,
        "index": 32179
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 939,
          "column": 1,
          "index": 32182
        },
        "end": {
          "line": 947,
          "column": 2,
          "index": 32431
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "names",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "uno o varios roles a eliminar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones aplicables"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NullableType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          },
          "prefix": true
        },
        "properties": [
          {
            "title": "param",
            "name": "options.ifExists",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "IF EXISTS"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          },
          {
            "title": "param",
            "name": "options.cascade",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "\"CASCADE\"/\"RESTRICT\""
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          },
          {
            "title": "param",
            "name": "options.restrict",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "\"RESTRICT\"/\"CASCADE\""
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "dropRoles",
    "memberof": "QueryBuilder.DDL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dropRoles",
        "kind": "function"
      }
    ],
    "namespace": "dropRoles"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Otorga permisos a usuarios o roles sobre objetos de la base de datos.\r\nPermite asignar permisos a usuarios."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t✅\tPermite permisos detallados a nivel de columna, tabla y esquema."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t\t✅\tUsa GRANT junto con WITH GRANT OPTION para permitir reasignar permisos."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQL Server\t✅\tTambién usa DENY y REVOKE para revocar permisos."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Oracle\t\t\t✅\tSoporta permisos sobre tablas, roles, procedimientos y secuencias."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQLite\t\t\t❌ No maneja usuarios ni permisos a nivel SQL."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MongoDB\t\t\t✅\tgrantRolesToUser()\tPermite asignar roles con permisos específicos."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "grant"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DCL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Otorga permisos a usuarios o roles sobre objetos de la base de datos.\r\nPermite asignar permisos a usuarios.\r\n- PostgreSQL\t✅\tPermite permisos detallados a nivel de columna, tabla y esquema.\r\n- MySQL\t\t\t\t✅\tUsa GRANT junto con WITH GRANT OPTION para permitir reasignar permisos.\r\n- SQL Server\t✅\tTambién usa DENY y REVOKE para revocar permisos.\r\n- Oracle\t\t\t✅\tSoporta permisos sobre tablas, roles, procedimientos y secuencias.\r\n- SQLite\t\t\t❌ No maneja usuarios ni permisos a nivel SQL.\r\n- MongoDB\t\t\t✅\tgrantRolesToUser()\tPermite asignar roles con permisos específicos.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Permisos a conceder",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "privilegios"
      },
      {
        "title": "param",
        "description": "Objeto sobre el que se otorga",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "name": "on"
      },
      {
        "title": "param",
        "description": "Especifica el tipo sobre el que se aplica 'types/privilevios.js'",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "objectTypes"
        },
        "name": "on.objectType"
      },
      {
        "title": "param",
        "description": "usuarios o roles a los que se otorga",
        "lineNumber": 15,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "PUBLIC"
            },
            {
              "type": "StringLiteralType",
              "value": "ALL"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "to"
      },
      {
        "title": "param",
        "description": "WITH GRANT OPTION",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.withGrant"
      },
      {
        "title": "param",
        "description": "GRANTED BY",
        "lineNumber": 17,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "CURRENT_USER"
            },
            {
              "type": "StringLiteralType",
              "value": "CURRENT_ROLE"
            }
          ]
        },
        "name": "options.grantBy"
      },
      {
        "title": "param",
        "description": "rol desde el que se otorga",
        "lineNumber": 18,
        "type": {
          "type": "AllLiteral"
        },
        "name": "options.role"
      },
      {
        "title": "param",
        "description": "true (WITH ADMIN OPTION)",
        "lineNumber": 19,
        "type": {
          "type": "AllLiteral"
        },
        "name": "options.admin"
      },
      {
        "title": "param",
        "description": "\"CASCADE\"/\"RESTRICT\"",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.cascade"
      },
      {
        "title": "param",
        "description": "\"RESTRICT\"/\"CASCADE\"",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.restrict"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.revoke('SELECT', 'users', 'admin');\r\n// Resultado esperado: { success: true, granted: 'SELECT', on: 'users', to: 'admin' }",
        "lineNumber": 24
      }
    ],
    "loc": {
      "start": {
        "line": 948,
        "column": 1,
        "index": 32434
      },
      "end": {
        "line": 976,
        "column": 4,
        "index": 34074
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 977,
          "column": 1,
          "index": 34077
        },
        "end": {
          "line": 985,
          "column": 2,
          "index": 34346
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.revoke('SELECT', 'users', 'admin');\r\n// Resultado esperado: { success: true, granted: 'SELECT', on: 'users', to: 'admin' }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "privilegios",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Permisos a conceder"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "on",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto sobre el que se otorga"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "properties": [
          {
            "title": "param",
            "name": "on.objectType",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Especifica el tipo sobre el que se aplica 'types/privilevios.js'"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "objectTypes"
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "to",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "usuarios o roles a los que se otorga"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "PUBLIC"
            },
            {
              "type": "StringLiteralType",
              "value": "ALL"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "grant",
    "memberof": "QueryBuilder.DCL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "grant",
        "kind": "function"
      }
    ],
    "namespace": "grant"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Revoca permisos previamente otorgados a usuarios o roles sobre objetos de la base de datos.\r\nSe utiliza para eliminar permisos previamente otorgados a usuarios,\r\nrestringiendo el acceso a objetos como tablas, vistas y esquemas."
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "PostgreSQL\t✅ Sí\tPermite revocar permisos de usuarios y roles sobre tablas, esquemas y columnas."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MySQL\t\t\t\t✅ Sí\tSe usa junto con GRANT para administrar permisos."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQL Server\t✅ Sí\tAdemás, permite DENY para bloquear permisos específicos."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Oracle\t\t\t✅ Sí\tPuede revocar permisos de usuarios y roles sobre objetos de la base de datos."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "SQLite\t\t\t❌ No\tNo maneja usuarios ni permisos a nivel SQL."
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MongoDB\t\t\t✅\trevokeRolesFromUser()\tPermite eliminar roles previamente asignados a un usuario."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "revoke"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DCL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Revoca permisos previamente otorgados a usuarios o roles sobre objetos de la base de datos.\r\nSe utiliza para eliminar permisos previamente otorgados a usuarios,\r\nrestringiendo el acceso a objetos como tablas, vistas y esquemas.\r\n- PostgreSQL\t✅ Sí\tPermite revocar permisos de usuarios y roles sobre tablas, esquemas y columnas.\r\n- MySQL\t\t\t\t✅ Sí\tSe usa junto con GRANT para administrar permisos.\r\n- SQL Server\t✅ Sí\tAdemás, permite DENY para bloquear permisos específicos.\r\n- Oracle\t\t\t✅ Sí\tPuede revocar permisos de usuarios y roles sobre objetos de la base de datos.\r\n- SQLite\t\t\t❌ No\tNo maneja usuarios ni permisos a nivel SQL.\r\n- MongoDB\t\t\t✅\trevokeRolesFromUser()\tPermite eliminar roles previamente asignados a un usuario.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Permisos a conceder",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "privilegios"
      },
      {
        "title": "param",
        "description": "Objeto sobre el que se otorga",
        "lineNumber": 14,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "name": "on"
      },
      {
        "title": "param",
        "description": "Especifica el tipo sobre el que se aplica 'types/privilevios.js'",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "objectTypes"
        },
        "name": "on.objectType"
      },
      {
        "title": "param",
        "description": "A quien se le retira",
        "lineNumber": 16,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "PUBLIC"
            },
            {
              "type": "StringLiteralType",
              "value": "ALL"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "from"
      },
      {
        "title": "param",
        "description": "WITH GRANT OPTION",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.withGrant"
      },
      {
        "title": "param",
        "description": "GRANTED BY",
        "lineNumber": 18,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "CURRENT_USER"
            },
            {
              "type": "StringLiteralType",
              "value": "CURRENT_ROLE"
            }
          ]
        },
        "name": "options.grantBy"
      },
      {
        "title": "param",
        "description": "\"CASCADE\"/\"RESTRICT\"",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.cascade"
      },
      {
        "title": "param",
        "description": "\"RESTRICT\"/\"CASCADE\"",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.restrict"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.revoke('SELECT', 'users', 'admin');\r\n// Resultado esperado: { success: true, revoked: 'SELECT', on: 'users', from: 'admin' }",
        "lineNumber": 23
      }
    ],
    "loc": {
      "start": {
        "line": 986,
        "column": 1,
        "index": 34349
      },
      "end": {
        "line": 1014,
        "column": 4,
        "index": 36022
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1016,
          "column": 1,
          "index": 36027
        },
        "end": {
          "line": 1024,
          "column": 2,
          "index": 36302
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.revoke('SELECT', 'users', 'admin');\r\n// Resultado esperado: { success: true, revoked: 'SELECT', on: 'users', from: 'admin' }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "privilegios",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Permisos a conceder"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "on",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto sobre el que se otorga"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "properties": [
          {
            "title": "param",
            "name": "on.objectType",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Especifica el tipo sobre el que se aplica 'types/privilevios.js'"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "objectTypes"
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "from",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A quien se le retira"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "PUBLIC"
            },
            {
              "type": "StringLiteralType",
              "value": "ALL"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "revoke",
    "memberof": "QueryBuilder.DCL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "revoke",
        "kind": "function"
      }
    ],
    "namespace": "revoke"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Como grant pero solo para roles"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "grantRoles"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DCL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Como grant pero solo para roles",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "rol o roles para asignar",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "roles"
      },
      {
        "title": "param",
        "description": "usuario o usuarios a los que se conceden",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "users"
      },
      {
        "title": "param",
        "description": "true (WITH ADMIN OPTION)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.admin-null"
      },
      {
        "title": "param",
        "description": "GRANTED BY",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "CURRENT_USER"
            },
            {
              "type": "StringLiteralType",
              "value": "CURRENT_ROLE"
            }
          ]
        },
        "name": "options.granted"
      },
      {
        "title": "param",
        "description": "\"CASCADE\"/\"RESTRICT\"",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.cascade"
      },
      {
        "title": "param",
        "description": "\"RESTRICT\"/\"CASCADE\"",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.restrict"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.grantRoles('editor', 'john_doe');\r\n// Resultado esperado: { success: true, granted: 'editor', to: 'john_doe' }",
        "lineNumber": 13
      }
    ],
    "loc": {
      "start": {
        "line": 1026,
        "column": 1,
        "index": 36307
      },
      "end": {
        "line": 1044,
        "column": 4,
        "index": 37098
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1045,
          "column": 1,
          "index": 37101
        },
        "end": {
          "line": 1053,
          "column": 2,
          "index": 37366
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.grantRoles('editor', 'john_doe');\r\n// Resultado esperado: { success: true, granted: 'editor', to: 'john_doe' }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "roles",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "rol o roles para asignar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "users",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "usuario o usuarios a los que se conceden"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "grantRoles",
    "memberof": "QueryBuilder.DCL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "grantRoles",
        "kind": "function"
      }
    ],
    "namespace": "grantRoles"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Como revoke, pero para roles"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "revokeRoles"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DCL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Como revoke, pero para roles",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "roles a eliminar",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "roles"
      },
      {
        "title": "param",
        "description": "A quien se le retira",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "PUBLIC"
            },
            {
              "type": "StringLiteralType",
              "value": "ALL"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "from"
      },
      {
        "title": "param",
        "description": "GRANTED BY",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "CURRENT_USER"
            },
            {
              "type": "StringLiteralType",
              "value": "CURRENT_ROLE"
            }
          ]
        },
        "name": "options.grantBy"
      },
      {
        "title": "param",
        "description": "\"CASCADE\"/\"RESTRICT\"",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.cascade"
      },
      {
        "title": "param",
        "description": "\"RESTRICT\"/\"CASCADE\"",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "options.restrict"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.revokeRoles('editor', 'john_doe');\r\n// Resultado esperado: { success: true, revoked: 'editor', from: 'john_doe' }",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 1054,
        "column": 1,
        "index": 37369
      },
      "end": {
        "line": 1071,
        "column": 4,
        "index": 38078
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1072,
          "column": 1,
          "index": 38081
        },
        "end": {
          "line": 1080,
          "column": 2,
          "index": 38346
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.revokeRoles('editor', 'john_doe');\r\n// Resultado esperado: { success: true, revoked: 'editor', from: 'john_doe' }"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "roles",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "roles a eliminar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "from",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A quien se le retira"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "PUBLIC"
            },
            {
              "type": "StringLiteralType",
              "value": "ALL"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "revokeRoles",
    "memberof": "QueryBuilder.DCL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "revokeRoles",
        "kind": "function"
      }
    ],
    "namespace": "revokeRoles"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Establece restricciones o reglas en la base de datos.\r\nPermite definir restricciones como UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK, etc."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "setConstraints"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DCL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Establece restricciones o reglas en la base de datos.\r\nPermite definir restricciones como UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK, etc.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Array de objetos que definen las restricciones",
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "restrictions"
      },
      {
        "title": "param",
        "description": "Tipo de restricción (e.g., 'UNIQUE', 'PRIMARY KEY', etc.)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "type"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando los parámetros no coinciden con los tipos esperados",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Add a UNIQUE constraint\r\nqb.setConstraints([{ column: 'email' }], 'UNIQUE', {});",
        "lineNumber": 11
      }
    ],
    "loc": {
      "start": {
        "line": 2486,
        "column": 1,
        "index": 94486
      },
      "end": {
        "line": 2502,
        "column": 4,
        "index": 95247
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2503,
          "column": 1,
          "index": 95250
        },
        "end": {
          "line": 2511,
          "column": 2,
          "index": 95514
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Add a UNIQUE constraint\r\nqb.setConstraints([{ column: 'email' }], 'UNIQUE', {});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "restrictions",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array de objetos que definen las restricciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "type",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Tipo de restricción (e.g., 'UNIQUE', 'PRIMARY KEY', etc.)"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando los parámetros no coinciden con los tipos esperados"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "setConstraints",
    "memberof": "QueryBuilder.DCL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setConstraints",
        "kind": "function"
      }
    ],
    "namespace": "setConstraints"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea declaración SELECT para recuperación de datos\r\nGenera cláusula SQL SELECT con columnas y opciones especificadas\r\nSELECT [ DISTINCT | ALL ] { * | < selección de lista > }"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "select"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea declaración SELECT para recuperación de datos\r\nGenera cláusula SQL SELECT con columnas y opciones especificadas\r\nSELECT [ DISTINCT | ALL ] { * | < selección de lista > }",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Columnas seleccionadas",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Column"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Column"
                }
              ]
            }
          ]
        },
        "name": "columns"
      },
      {
        "title": "param",
        "description": "opciones",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "SELECT columna1, columna2 FROM tabla;\r\n\r\n// Seleccionar todas las columnas\r\nqb.select('*').from('users');\r\n\r\n// Seleccionar columnas específicas\r\nqb.select(['name', 'email']).from('users');\r\n\r\n// Seleccionar con DISTINCT\r\nqb.select('category', { distinct: true }).from('products');",
        "lineNumber": 11
      }
    ],
    "loc": {
      "start": {
        "line": 1087,
        "column": 1,
        "index": 38576
      },
      "end": {
        "line": 1110,
        "column": 4,
        "index": 39469
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1111,
          "column": 1,
          "index": 39472
        },
        "end": {
          "line": 1119,
          "column": 2,
          "index": 39719
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "SELECT columna1, columna2 FROM tabla;\r\n\r\n// Seleccionar todas las columnas\r\nqb.select('*').from('users');\r\n\r\n// Seleccionar columnas específicas\r\nqb.select(['name', 'email']).from('users');\r\n\r\n// Seleccionar con DISTINCT\r\nqb.select('category', { distinct: true }).from('products');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columns",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Columnas seleccionadas"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Column"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Column"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "select",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "select",
        "kind": "function"
      }
    ],
    "namespace": "select"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Especifica la tabla o vista de donde se van a obtener los datos."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "from"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Especifica la tabla o vista de donde se van a obtener los datos.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "tabla o tablas de donde obtener los datos",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "tables"
      },
      {
        "title": "param",
        "description": "alias o lista de alias correspondiente a las tablas",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "alias"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "// Ejemplos válidos\r\nqb.from(\"users\", \"u\");\r\nqb.from([\"users\", \"orders\"], [\"u\", \"o\"]);\r\nqb.from(\"users\");\r\nqb.from([\"users\", \"orders\"]);\r\n// Errores\r\nqb.from(\"users\", [\"u\", \"o\"]); // Error\r\nqb.from([\"users\", \"orders\"], \"u\"); // Error\r\nqb.from([\"users\", \"orders\"], [\"u\"]); // Error\r\nqb.from(\"users\", \"u\", \"o\"); // Error\r\nqb.from([\"users\", \"orders\"], [\"u\", \"o\", \"x\"]); // Válido",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 1161,
        "column": 1,
        "index": 41182
      },
      "end": {
        "line": 1184,
        "column": 4,
        "index": 42068
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1185,
          "column": 1,
          "index": 42071
        },
        "end": {
          "line": 1201,
          "column": 2,
          "index": 42583
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Ejemplos válidos\r\nqb.from(\"users\", \"u\");\r\nqb.from([\"users\", \"orders\"], [\"u\", \"o\"]);\r\nqb.from(\"users\");\r\nqb.from([\"users\", \"orders\"]);\r\n// Errores\r\nqb.from(\"users\", [\"u\", \"o\"]); // Error\r\nqb.from([\"users\", \"orders\"], \"u\"); // Error\r\nqb.from([\"users\", \"orders\"], [\"u\"]); // Error\r\nqb.from(\"users\", \"u\", \"o\"); // Error\r\nqb.from([\"users\", \"orders\"], [\"u\", \"o\", \"x\"]); // Válido"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "tables",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "tabla o tablas de donde obtener los datos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "alias",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "alias o lista de alias correspondiente a las tablas"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "from",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "from",
        "kind": "function"
      }
    ],
    "namespace": "from"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Define la condición WHERE para filtrar registros en una consulta SQL.\r\nSoporta cadenas SQL, instancias de QueryBuilder o arrays de condiciones.\r\nFiltrar registros en una consulta, seleccionando solo aquellos que cumplen con una condición específica.\r\nEs una parte esencial en las sentencias SELECT, UPDATE, DELETE, etc., ya que permite limitar los resultados\r\no modificar solo las filas que cumplen con ciertos criterios."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "where"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Define la condición WHERE para filtrar registros en una consulta SQL.\r\nSoporta cadenas SQL, instancias de QueryBuilder o arrays de condiciones.\r\nFiltrar registros en una consulta, seleccionando solo aquellos que cumplen con una condición específica.\r\nEs una parte esencial en las sentencias SELECT, UPDATE, DELETE, etc., ya que permite limitar los resultados\r\no modificar solo las filas que cumplen con ciertos criterios.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Condiciones del WHERE (cadena, expresión QB o array)",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    {
                      "type": "NameExpression",
                      "name": "QueryBuilder"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "name": "predicados"
      },
      {
        "title": "param",
        "description": "Instancia de QueryBuilder para el contexto de encadenamiento de métodos",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.select('*').from('users').where('age > 18');\r\nqb.select('*').from('users').where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.update('users', { status: 'inactive' }).where('last_login < \"2023-01-01\"');",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 1202,
        "column": 1,
        "index": 42586
      },
      "end": {
        "line": 1220,
        "column": 4,
        "index": 43670
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1222,
          "column": 1,
          "index": 43675
        },
        "end": {
          "line": 1247,
          "column": 2,
          "index": 44762
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.select('*').from('users').where('age > 18');\r\nqb.select('*').from('users').where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.update('users', { status: 'inactive' }).where('last_login < \"2023-01-01\"');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "predicados",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Condiciones del WHERE (cadena, expresión QB o array)"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    {
                      "type": "NameExpression",
                      "name": "QueryBuilder"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de QueryBuilder para el contexto de encadenamiento de métodos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "where",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "where",
        "kind": "function"
      }
    ],
    "namespace": "where"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando USING se utiliza en SQL para especificar las columnas que se van a utilizar para combinar dos tablas en una operación JOIN.\r\nA diferencia de la cláusula ON, que requiere una condición explícita, USING simplifica la sintaxis al asumir que las columnas mencionadas tienen el mismo nombre en ambas tablas.\r\nSe usa principalmente en consultas SQL para especificar columnas en operaciones de JOIN.\r\nEs especialmente útil cuando las columnas que se van a combinar tienen el mismo nombre en ambas tablas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "using"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando USING se utiliza en SQL para especificar las columnas que se van a utilizar para combinar dos tablas en una operación JOIN.\r\nA diferencia de la cláusula ON, que requiere una condición explícita, USING simplifica la sintaxis al asumir que las columnas mencionadas tienen el mismo nombre en ambas tablas.\r\nSe usa principalmente en consultas SQL para especificar columnas en operaciones de JOIN.\r\nEs especialmente útil cuando las columnas que se van a combinar tienen el mismo nombre en ambas tablas.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Columna en comun",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "columnsInCommon"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Instancia de QueryBuilder para el encadenamiento de métodos",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Si el comando previo no es un JOIN válido",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "qb.select('*').from('tabla1').join('tabla2').using('columna_comun');\r\nqb.select('*').from('tabla1').innerJoin('tabla2').using('columna_comun');\r\n// Errores\r\nqb.select('*').from('tabla1').where('condicion').using('columna_comun'); // Error",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 1340,
        "column": 1,
        "index": 48244
      },
      "end": {
        "line": 1359,
        "column": 4,
        "index": 49357
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1360,
          "column": 1,
          "index": 49360
        },
        "end": {
          "line": 1368,
          "column": 2,
          "index": 49787
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.select('*').from('tabla1').join('tabla2').using('columna_comun');\r\nqb.select('*').from('tabla1').innerJoin('tabla2').using('columna_comun');\r\n// Errores\r\nqb.select('*').from('tabla1').where('condicion').using('columna_comun'); // Error"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columnsInCommon",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Columna en comun"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de QueryBuilder para el encadenamiento de métodos"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Si el comando previo no es un JOIN válido"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "using",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "using",
        "kind": "function"
      }
    ],
    "namespace": "using"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Especifica la condición de unión para un JOIN.\r\nSe utiliza para definir cómo se combinan las filas de dos tablas en una operación JOIN."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "on"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Especifica la condición de unión para un JOIN.\r\nSe utiliza para definir cómo se combinan las filas de dos tablas en una operación JOIN.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Condición de unión",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "condition"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Si el comando previo no es un JOIN válido",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "qb.select('*').from('tabla1').join('tabla2').on('tabla1.id = tabla2.id');\r\nqb.select('*').from('tabla1').innerJoin('tabla2').on('tabla1.id = tabla2.id');\r\n// Errores\r\nqb.select('*').from('tabla1').where('condicion').on('tabla1.id = tabla2.id'); // Error",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1369,
        "column": 1,
        "index": 49790
      },
      "end": {
        "line": 1386,
        "column": 4,
        "index": 50534
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1387,
          "column": 1,
          "index": 50537
        },
        "end": {
          "line": 1395,
          "column": 2,
          "index": 50943
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.select('*').from('tabla1').join('tabla2').on('tabla1.id = tabla2.id');\r\nqb.select('*').from('tabla1').innerJoin('tabla2').on('tabla1.id = tabla2.id');\r\n// Errores\r\nqb.select('*').from('tabla1').where('condicion').on('tabla1.id = tabla2.id'); // Error"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "condition",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Condición de unión"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Si el comando previo no es un JOIN válido"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "on",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "on",
        "kind": "function"
      }
    ],
    "namespace": "on"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Operaciones de JOIN para especificar las condiciones de cómo se deben combinar las tablas.\r\nDefine las columnas o condiciones que se deben cumplir para que filas de diferentes tablas sean combinadas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "on"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Operaciones de JOIN para especificar las condiciones de cómo se deben combinar las tablas.\r\nDefine las columnas o condiciones que se deben cumplir para que filas de diferentes tablas sean combinadas.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        },
        "name": "predicado"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "SELECT columna1, columna2\r\nFROM tabla1\r\nJOIN tabla2\r\nON tabla1.columna = tabla2.columna;",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 1575,
        "column": 1,
        "index": 58935
      },
      "end": {
        "line": 1589,
        "column": 4,
        "index": 59545
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1590,
          "column": 1,
          "index": 59548
        },
        "end": {
          "line": 1602,
          "column": 2,
          "index": 59967
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "SELECT columna1, columna2\r\nFROM tabla1\r\nJOIN tabla2\r\nON tabla1.columna = tabla2.columna;"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "predicado",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "on",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "on",
        "kind": "function"
      }
    ],
    "namespace": "on"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "SQL Server\t✅ Sí\tSoporta ambas opciones UNION y UNION ALL.\r\nOracle\t\t\t✅ Sí\tPermite UNION y UNION ALL para combinar resultados de varias consultas.\r\nSQLite\t\t\t✅ Sí\tSoporta UNION y UNION ALL en consultas SELECT.\r\nMongoDB\t$unionWith\tPermite combinar los resultados de dos colecciones en una agregación."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "union"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "SQL Server\t✅ Sí\tSoporta ambas opciones UNION y UNION ALL.\r\nOracle\t\t\t✅ Sí\tPermite UNION y UNION ALL para combinar resultados de varias consultas.\r\nSQLite\t\t\t✅ Sí\tSoporta UNION y UNION ALL en consultas SELECT.\r\nMongoDB\t$unionWith\tPermite combinar los resultados de dos colecciones en una agregación.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Selects a unir",
        "lineNumber": 8,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        },
        "name": "selects"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1396,
        "column": 1,
        "index": 50946
      },
      "end": {
        "line": 1406,
        "column": 4,
        "index": 51495
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1407,
          "column": 1,
          "index": 51498
        },
        "end": {
          "line": 1423,
          "column": 2,
          "index": 51995
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selects",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Selects a unir"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "union",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "union",
        "kind": "function"
      }
    ],
    "namespace": "union"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Combinar los resultados de dos o más consultas SELECT.\r\nIncluyendo duplicados."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "unionAll"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Combinar los resultados de dos o más consultas SELECT.\r\nIncluyendo duplicados.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Selects a unir por UNION ALL",
        "lineNumber": 6,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        },
        "name": "selects"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.unionAll(select1, select2);",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1424,
        "column": 1,
        "index": 51998
      },
      "end": {
        "line": 1436,
        "column": 4,
        "index": 52392
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1437,
          "column": 1,
          "index": 52395
        },
        "end": {
          "line": 1454,
          "column": 2,
          "index": 52959
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.unionAll(select1, select2);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selects",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Selects a unir por UNION ALL"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "unionAll",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "unionAll",
        "kind": "function"
      }
    ],
    "namespace": "unionAll"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando INTERSECT se utiliza en SQL para obtener los registros comunes entre dos consultas SELECT.\r\nRetorna solo las filas que existen en ambas consultas, eliminando duplicados.\r\nPostgreSQL\t✅ \tSoporta INTERSECT para obtener los registros comunes entre dos consultas.\r\nMySQL\t\t\t❌ \tNo soporta INTERSECT, pero puede emularse con JOIN o IN.\r\nSQL Server\t❌ \tNo soporta INTERSECT ALL, pero se puede simular con GROUP BY y HAVING.\r\nOracle\t\t\t✅ \tSoporta INTERSECT en consultas SQL.\r\nSQLite\t\t\t❌ \tNo tiene soporte nativo para INTERSECT, pero puede simularse con JOIN.\r\nMongoDB\t$lookup con $match\tSe puede utilizar una combinación de lookup para unir colecciones y luego filtrar los resultados comunes con $match."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "intersect"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando INTERSECT se utiliza en SQL para obtener los registros comunes entre dos consultas SELECT.\r\nRetorna solo las filas que existen en ambas consultas, eliminando duplicados.\r\nPostgreSQL\t✅ \tSoporta INTERSECT para obtener los registros comunes entre dos consultas.\r\nMySQL\t\t\t❌ \tNo soporta INTERSECT, pero puede emularse con JOIN o IN.\r\nSQL Server\t❌ \tNo soporta INTERSECT ALL, pero se puede simular con GROUP BY y HAVING.\r\nOracle\t\t\t✅ \tSoporta INTERSECT en consultas SQL.\r\nSQLite\t\t\t❌ \tNo tiene soporte nativo para INTERSECT, pero puede simularse con JOIN.\r\nMongoDB\t$lookup con $match\tSe puede utilizar una combinación de lookup para unir colecciones y luego filtrar los resultados comunes con $match.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Selects",
        "lineNumber": 12,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        },
        "name": "selects"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.intersect(select1, select2);",
        "lineNumber": 14
      }
    ],
    "loc": {
      "start": {
        "line": 1455,
        "column": 1,
        "index": 52962
      },
      "end": {
        "line": 1473,
        "column": 4,
        "index": 53985
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1474,
          "column": 1,
          "index": 53988
        },
        "end": {
          "line": 1483,
          "column": 2,
          "index": 54356
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.intersect(select1, select2);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selects",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Selects"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "intersect",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "intersect",
        "kind": "function"
      }
    ],
    "namespace": "intersect"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando INTERSECT ALL es similar a INTERSECT, pero mantiene los duplicados en el resultado.\r\nA diferencia de INTERSECT, que elimina los duplicados,\r\nINTERSECT ALL retiene las filas comunes que aparecen en ambas consultas, incluyendo todas las repeticiones de esas filas."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "PostgreSQL\t✅ \tSoporta INTERSECT para obtener los registros comunes entre dos consultas.\r\nMySQL\t\t\t❌ \tNo soporta INTERSECT, pero puede emularse con JOIN o IN.\r\nSQL Server\t✅ \tSoporta INTERSECT para encontrar intersecciones entre dos conjuntos de resultados.\r\nOracle\t\t\t✅ \tSoporta INTERSECT en consultas SQL.\r\nSQLite\t\t\t❌ \tNo tiene soporte nativo para INTERSECT, pero puede simularse con JOIN.\r\nMongoDB\t$lookup con $group\tSe pueden combinar colecciones y luego agrupar los resultados para mantener duplicados."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "intersectAll"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando INTERSECT ALL es similar a INTERSECT, pero mantiene los duplicados en el resultado.\r\nA diferencia de INTERSECT, que elimina los duplicados,\r\nINTERSECT ALL retiene las filas comunes que aparecen en ambas consultas, incluyendo todas las repeticiones de esas filas.\r\n\r\nPostgreSQL\t✅ \tSoporta INTERSECT para obtener los registros comunes entre dos consultas.\r\nMySQL\t\t\t❌ \tNo soporta INTERSECT, pero puede emularse con JOIN o IN.\r\nSQL Server\t✅ \tSoporta INTERSECT para encontrar intersecciones entre dos conjuntos de resultados.\r\nOracle\t\t\t✅ \tSoporta INTERSECT en consultas SQL.\r\nSQLite\t\t\t❌ \tNo tiene soporte nativo para INTERSECT, pero puede simularse con JOIN.\r\nMongoDB\t$lookup con $group\tSe pueden combinar colecciones y luego agrupar los resultados para mantener duplicados.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Selects",
        "lineNumber": 14,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        },
        "name": "selects"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.intersectAll(select1, select2);",
        "lineNumber": 16
      }
    ],
    "loc": {
      "start": {
        "line": 1484,
        "column": 1,
        "index": 54359
      },
      "end": {
        "line": 1504,
        "column": 4,
        "index": 55473
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1505,
          "column": 1,
          "index": 55476
        },
        "end": {
          "line": 1514,
          "column": 2,
          "index": 55849
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.intersectAll(select1, select2);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selects",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Selects"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "intersectAll",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "intersectAll",
        "kind": "function"
      }
    ],
    "namespace": "intersectAll"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando EXCEPT se utiliza para obtener los registros que están en la primera consulta, pero no en la segunda.\r\nEste comando elimina los duplicados por defecto, retornando solo los registros únicos que existen\r\nen la primera consulta y no en la segunda.\r\nPostgreSQL\t✅ Soporta EXCEPT para obtener registros de la primera consulta que no estén en la segunda.\r\nMySQL\t\t\t❌ No soporta EXCEPT, pero se puede emular utilizando LEFT JOIN o NOT EXISTS.\r\nSQL Server\t✅ Soporta EXCEPT para obtener diferencias entre dos conjuntos de resultados.\r\nOracle\t\t\t✅ Soporta EXCEPT para encontrar registros que están en la primera consulta pero no en la segunda.\r\nSQLite\t\t\t❌ No tiene soporte nativo para EXCEPT, pero se puede simular con LEFT JOIN o NOT EXISTS.\r\nMongoDB\t$lookup con $match y $project\tSe puede emular EXCEPT mediante un lookup para combinar colecciones y luego excluir los registros coincidentes."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "except"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando EXCEPT se utiliza para obtener los registros que están en la primera consulta, pero no en la segunda.\r\nEste comando elimina los duplicados por defecto, retornando solo los registros únicos que existen\r\nen la primera consulta y no en la segunda.\r\nPostgreSQL\t✅ Soporta EXCEPT para obtener registros de la primera consulta que no estén en la segunda.\r\nMySQL\t\t\t❌ No soporta EXCEPT, pero se puede emular utilizando LEFT JOIN o NOT EXISTS.\r\nSQL Server\t✅ Soporta EXCEPT para obtener diferencias entre dos conjuntos de resultados.\r\nOracle\t\t\t✅ Soporta EXCEPT para encontrar registros que están en la primera consulta pero no en la segunda.\r\nSQLite\t\t\t❌ No tiene soporte nativo para EXCEPT, pero se puede simular con LEFT JOIN o NOT EXISTS.\r\nMongoDB\t$lookup con $match y $project\tSe puede emular EXCEPT mediante un lookup para combinar colecciones y luego excluir los registros coincidentes.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Selects",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        },
        "name": "selects"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.except(select1, select2);",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 1515,
        "column": 1,
        "index": 55852
      },
      "end": {
        "line": 1534,
        "column": 4,
        "index": 57062
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1535,
          "column": 1,
          "index": 57065
        },
        "end": {
          "line": 1544,
          "column": 2,
          "index": 57421
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.except(select1, select2);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selects",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Selects"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "except",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "except",
        "kind": "function"
      }
    ],
    "namespace": "except"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando EXCEPT ALL es una variante de EXCEPT que, a diferencia de EXCEPT,\r\nmantiene los duplicados en el resultado.\r\nEs decir, devuelve todas las filas que están en la primera consulta, pero no en la segunda, y mantiene las repeticiones de esas filas.\r\nPostgreSQL\t✅ Soporta EXCEPT ALL para obtener las filas que están en la primera consulta, pero no en la segunda, manteniendo duplicados.\r\nMySQL\t\t\t❌ No soporta EXCEPT ALL, pero puede emularse utilizando LEFT JOIN o NOT EXISTS.\r\nSQL Server\t❌ No soporta EXCEPT ALL, aunque se puede simular con GROUP BY y HAVING.\r\nOracle\t\t\t❌ No tiene soporte nativo para EXCEPT ALL.\r\nSQLite\t\t\t❌ No soporta EXCEPT ALL, pero puede emularse con LEFT JOIN o NOT EXISTS.\r\nMongoDB\t$lookup con $group y $match\tSe pueden combinar colecciones y luego filtrar los resultados para mantener duplicados."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "exceptAll"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando EXCEPT ALL es una variante de EXCEPT que, a diferencia de EXCEPT,\r\nmantiene los duplicados en el resultado.\r\nEs decir, devuelve todas las filas que están en la primera consulta, pero no en la segunda, y mantiene las repeticiones de esas filas.\r\nPostgreSQL\t✅ Soporta EXCEPT ALL para obtener las filas que están en la primera consulta, pero no en la segunda, manteniendo duplicados.\r\nMySQL\t\t\t❌ No soporta EXCEPT ALL, pero puede emularse utilizando LEFT JOIN o NOT EXISTS.\r\nSQL Server\t❌ No soporta EXCEPT ALL, aunque se puede simular con GROUP BY y HAVING.\r\nOracle\t\t\t❌ No tiene soporte nativo para EXCEPT ALL.\r\nSQLite\t\t\t❌ No soporta EXCEPT ALL, pero puede emularse con LEFT JOIN o NOT EXISTS.\r\nMongoDB\t$lookup con $group y $match\tSe pueden combinar colecciones y luego filtrar los resultados para mantener duplicados.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        },
        "name": "selects"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.exceptAll(select1, select2);",
        "lineNumber": 15
      }
    ],
    "loc": {
      "start": {
        "line": 1545,
        "column": 1,
        "index": 57424
      },
      "end": {
        "line": 1564,
        "column": 4,
        "index": 58564
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1565,
          "column": 1,
          "index": 58567
        },
        "end": {
          "line": 1574,
          "column": 2,
          "index": 58932
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.exceptAll(select1, select2);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "selects",
        "lineNumber": 13,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "string"
              },
              {
                "type": "NameExpression",
                "name": "QueryBuilder"
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "exceptAll",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "exceptAll",
        "kind": "function"
      }
    ],
    "namespace": "exceptAll"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando GROUP BY en SQL se utiliza para agrupar filas que tienen el mismo valor en una o más columnas,\r\npermitiendo realizar cálculos agregados (COUNT, SUM, AVG, MAX, MIN, etc.) sobre cada grupo.\r\nPostgreSQL\t✅ Sí\tSoporta GROUP BY con múltiples columnas y funciones agregadas.\r\nMySQL\t\t\t✅ Sí\tCompatible con GROUP BY, pero en versiones antiguas permitía resultados ambiguos sin ONLY_FULL_GROUP_BY.\r\nSQL Server\t✅ Sí\tFunciona con agregaciones y permite GROUPING SETS.\r\nOracle\t\t\t✅ Sí\tCompatible y soporta extensiones como ROLLUP y CUBE.\r\nSQLite\t\t\t✅ Sí\tSoporta GROUP BY, pero con ciertas limitaciones en comparación con otras bases de datos.\r\nMongoDB\t$group\tEn el pipeline de agregación, $group permite agrupar documentos y aplicar operaciones agregadas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "groupBy"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando GROUP BY en SQL se utiliza para agrupar filas que tienen el mismo valor en una o más columnas,\r\npermitiendo realizar cálculos agregados (COUNT, SUM, AVG, MAX, MIN, etc.) sobre cada grupo.\r\nPostgreSQL\t✅ Sí\tSoporta GROUP BY con múltiples columnas y funciones agregadas.\r\nMySQL\t\t\t✅ Sí\tCompatible con GROUP BY, pero en versiones antiguas permitía resultados ambiguos sin ONLY_FULL_GROUP_BY.\r\nSQL Server\t✅ Sí\tFunciona con agregaciones y permite GROUPING SETS.\r\nOracle\t\t\t✅ Sí\tCompatible y soporta extensiones como ROLLUP y CUBE.\r\nSQLite\t\t\t✅ Sí\tSoporta GROUP BY, pero con ciertas limitaciones en comparación con otras bases de datos.\r\nMongoDB\t$group\tEn el pipeline de agregación, $group permite agrupar documentos y aplicar operaciones agregadas.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Una columna o varias",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "name": "columns"
      },
      {
        "title": "param",
        "description": "ROLLUP ( ...column )",
        "lineNumber": 13,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Column"
            }
          ]
        },
        "name": "columns.rollup"
      },
      {
        "title": "param",
        "description": "CUBE (...column )",
        "lineNumber": 14,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Column"
            }
          ]
        },
        "name": "columns.cube"
      },
      {
        "title": "param",
        "description": "opciones",
        "lineNumber": 15,
        "type": {
          "type": "AllLiteral"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando no hay un comando SELECT previo",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "qb.select('columna1, columna2, COUNT(*) as total')\r\n  .from('tabla')\r\n .groupBy(['columna1', 'columna2']);\r\n// Resultado: SELECT columna1, columna2, COUNT(*) as total FROM tabla GROUP BY columna1, columna2;\r\n\r\n// Usando ROLLUP\r\nqb.select('columna1, columna2, SUM(columna3) as total')\r\n  .from('tabla')\r\n  .groupBy({ rollup: [qb.col('columna1'), qb.col('columna2')] });\r\n// Resultado: SELECT columna1, columna2, SUM(columna3) as total FROM tabla GROUP BY ROLLUP (columna1, columna2);\r\n\r\n// Usando CUBE\r\nqb.select('columna1, columna2, AVG(columna3) as promedio')\r\n  .from('tabla')\r\n  .groupBy({ cube: [qb.col('columna1'), qb.col('columna2')] });\r\n// Resultado: SELECT columna1, columna2, AVG(columna3) as promedio FROM tabla GROUP BY CUBE (columna1, columna2);",
        "lineNumber": 19
      }
    ],
    "loc": {
      "start": {
        "line": 1880,
        "column": 1,
        "index": 70434
      },
      "end": {
        "line": 1918,
        "column": 4,
        "index": 72593
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1919,
          "column": 1,
          "index": 72596
        },
        "end": {
          "line": 1926,
          "column": 2,
          "index": 72880
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.select('columna1, columna2, COUNT(*) as total')\r\n  .from('tabla')\r\n .groupBy(['columna1', 'columna2']);\r\n// Resultado: SELECT columna1, columna2, COUNT(*) as total FROM tabla GROUP BY columna1, columna2;\r\n\r\n// Usando ROLLUP\r\nqb.select('columna1, columna2, SUM(columna3) as total')\r\n  .from('tabla')\r\n  .groupBy({ rollup: [qb.col('columna1'), qb.col('columna2')] });\r\n// Resultado: SELECT columna1, columna2, SUM(columna3) as total FROM tabla GROUP BY ROLLUP (columna1, columna2);\r\n\r\n// Usando CUBE\r\nqb.select('columna1, columna2, AVG(columna3) as promedio')\r\n  .from('tabla')\r\n  .groupBy({ cube: [qb.col('columna1'), qb.col('columna2')] });\r\n// Resultado: SELECT columna1, columna2, AVG(columna3) as promedio FROM tabla GROUP BY CUBE (columna1, columna2);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columns",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Una columna o varias"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "Object"
            }
          ]
        },
        "properties": [
          {
            "title": "param",
            "name": "columns.rollup",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "ROLLUP ( ...column )"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Column"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "columns.cube",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "CUBE (...column )"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Column"
                }
              ]
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "AllLiteral"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando no hay un comando SELECT previo"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "groupBy",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "groupBy",
        "kind": "function"
      }
    ],
    "namespace": "groupBy"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando HAVING en SQL se usa para filtrar los resultados después de aplicar GROUP BY,\r\npermitiendo restringir los grupos basados en condiciones sobre funciones agregadas\r\n(COUNT, SUM, AVG, MAX, MIN, etc.).\r\nPostgreSQL\t✅ Sí\tFunciona con GROUP BY para filtrar resultados agrupados.\r\nMySQL\t\t\t✅ Sí\tCompatible con todas las versiones, usado para restricciones en funciones agregadas.\r\nSQL Server\t✅ Sí\tSoporta HAVING con agregaciones y expresiones condicionales.\r\nOracle\t\t\t✅ Sí\tFunciona de la misma manera que en SQL estándar.\r\nSQLite\t\t\t✅ Sí\tCompatible con HAVING, pero con algunas limitaciones en expresiones más avanzadas.\r\nMongoDB\t$group seguido de $match.\tPrimero se agrupan los documentos con $group, luego se filtran los resultados con $match."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "having"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando HAVING en SQL se usa para filtrar los resultados después de aplicar GROUP BY,\r\npermitiendo restringir los grupos basados en condiciones sobre funciones agregadas\r\n(COUNT, SUM, AVG, MAX, MIN, etc.).\r\nPostgreSQL\t✅ Sí\tFunciona con GROUP BY para filtrar resultados agrupados.\r\nMySQL\t\t\t✅ Sí\tCompatible con todas las versiones, usado para restricciones en funciones agregadas.\r\nSQL Server\t✅ Sí\tSoporta HAVING con agregaciones y expresiones condicionales.\r\nOracle\t\t\t✅ Sí\tFunciona de la misma manera que en SQL estándar.\r\nSQLite\t\t\t✅ Sí\tCompatible con HAVING, pero con algunas limitaciones en expresiones más avanzadas.\r\nMongoDB\t$group seguido de $match.\tPrimero se agrupan los documentos con $group, luego se filtran los resultados con $match.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "expresion que utiliza el having",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "strict"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        },
        "name": "predicado"
      },
      {
        "title": "param",
        "description": "opciones",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando no hay un comando SELECT previo",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Cláusula HAVING simple\r\nlet qb = new QueryBuilder()\r\nqb.having(qb.and(qb.gt(qb.sum(\"Columna3\"),100)),qb.gt(qb.count(\"*\"),2))\r\nHAVING SUM(columna3) > 100 AND COUNT(*) > 2;",
        "lineNumber": 18
      }
    ],
    "loc": {
      "start": {
        "line": 1927,
        "column": 1,
        "index": 72883
      },
      "end": {
        "line": 1952,
        "column": 4,
        "index": 74299
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1953,
          "column": 1,
          "index": 74302
        },
        "end": {
          "line": 1960,
          "column": 2,
          "index": 74588
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Cláusula HAVING simple\r\nlet qb = new QueryBuilder()\r\nqb.having(qb.and(qb.gt(qb.sum(\"Columna3\"),100)),qb.gt(qb.count(\"*\"),2))\r\nHAVING SUM(columna3) > 100 AND COUNT(*) > 2;"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "predicado",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "expresion que utiliza el having"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "strict"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "opciones"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando no hay un comando SELECT previo"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "having",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "having",
        "kind": "function"
      }
    ],
    "namespace": "having"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando ORDER BY en SQL se utiliza para ordenar los resultados de una consulta según una o más columnas,\r\nen orden ascendente (ASC) o descendente (DESC).\r\nPostgreSQL\t✅ Sí\tSoporta ORDER BY con múltiples columnas y direcciones de ordenamiento.\r\nMySQL\t\t\t✅ Sí\tPermite ordenar por columnas, expresiones y alias definidos en SELECT.\r\nSQL Server\t✅ Sí\tCompatible con funciones como TOP y OFFSET FETCH.\r\nOracle\t\t\t✅ Sí\tSoporta ORDER BY junto con ROWNUM y FETCH FIRST.\r\nSQLite\t\t\t✅ Sí\tCompatible, pero puede tener restricciones en combinaciones avanzadas.\r\nMongoDB\tsort() o $sort\tsort() se usa en consultas, y $sort en pipelines de agregación."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "orderBy"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando ORDER BY en SQL se utiliza para ordenar los resultados de una consulta según una o más columnas,\r\nen orden ascendente (ASC) o descendente (DESC).\r\nPostgreSQL\t✅ Sí\tSoporta ORDER BY con múltiples columnas y direcciones de ordenamiento.\r\nMySQL\t\t\t✅ Sí\tPermite ordenar por columnas, expresiones y alias definidos en SELECT.\r\nSQL Server\t✅ Sí\tCompatible con funciones como TOP y OFFSET FETCH.\r\nOracle\t\t\t✅ Sí\tSoporta ORDER BY junto con ROWNUM y FETCH FIRST.\r\nSQLite\t\t\t✅ Sí\tCompatible, pero puede tener restricciones en combinaciones avanzadas.\r\nMongoDB\tsort() o $sort\tsort() se usa en consultas, y $sort en pipelines de agregación.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "columna, lista de columnas o un objeto sobre la que ordenar",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Column"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "name": "columns"
      },
      {
        "title": "param",
        "description": "columna sobre la que ordenar",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "columns.col"
      },
      {
        "title": "param",
        "description": "tipo de orden",
        "lineNumber": 15,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "ASC"
            },
            {
              "type": "StringLiteralType",
              "value": "DESC"
            }
          ]
        },
        "name": "columns.order"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando no hay un comando SELECT previo",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Ordenamiento simple\r\nqb.select('*').from('users').orderBy([{col: 'name', order: 'ASC'}]);\r\n\r\n// Ordenamiento de múltiples columnas\r\nqb.select('*').from('users').orderBy([\r\n  {col: 'department', order: 'ASC'}, \r\n  {col: 'salary', order: 'DESC'}\r\n]);",
        "lineNumber": 19
      }
    ],
    "loc": {
      "start": {
        "line": 1961,
        "column": 1,
        "index": 74591
      },
      "end": {
        "line": 1991,
        "column": 4,
        "index": 76099
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2023,
          "column": 1,
          "index": 77661
        },
        "end": {
          "line": 2030,
          "column": 2,
          "index": 77927
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Ordenamiento simple\r\nqb.select('*').from('users').orderBy([{col: 'name', order: 'ASC'}]);\r\n\r\n// Ordenamiento de múltiples columnas\r\nqb.select('*').from('users').orderBy([\r\n  {col: 'department', order: 'ASC'}, \r\n  {col: 'salary', order: 'DESC'}\r\n]);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columns",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "columna, lista de columnas o un objeto sobre la que ordenar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Column"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "object"
            }
          ]
        },
        "properties": [
          {
            "title": "param",
            "name": "columns.col",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "columna sobre la que ordenar"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "columns.order",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "tipo de orden"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "ASC"
                },
                {
                  "type": "StringLiteralType",
                  "value": "DESC"
                }
              ]
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando no hay un comando SELECT previo"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "orderBy",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "orderBy",
        "kind": "function"
      }
    ],
    "namespace": "orderBy"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El comando ORDER BY en SQL se utiliza para ordenar los resultados de una consulta según una o más columnas,\r\nen orden ascendente (ASC) o descendente (DESC).\r\nPostgreSQL\t✅ Sí\tSoporta ORDER BY con múltiples columnas y direcciones de ordenamiento.\r\nMySQL\t\t\t✅ Sí\tPermite ordenar por columnas, expresiones y alias definidos en SELECT.\r\nSQL Server\t✅ Sí\tCompatible con funciones como TOP y OFFSET FETCH.\r\nOracle\t\t\t✅ Sí\tSoporta ORDER BY junto con ROWNUM y FETCH FIRST.\r\nSQLite\t\t\t✅ Sí\tCompatible, pero puede tener restricciones en combinaciones avanzadas.\r\nMongoDB\tsort() o $sort\tsort() se usa en consultas, y $sort en pipelines de agregación."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "orderBy"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El comando ORDER BY en SQL se utiliza para ordenar los resultados de una consulta según una o más columnas,\r\nen orden ascendente (ASC) o descendente (DESC).\r\nPostgreSQL\t✅ Sí\tSoporta ORDER BY con múltiples columnas y direcciones de ordenamiento.\t\r\nMySQL\t\t\t✅ Sí\tPermite ordenar por columnas, expresiones y alias definidos en SELECT.\r\nSQL Server\t✅ Sí\tCompatible con funciones como TOP y OFFSET FETCH.\r\nOracle\t\t\t✅ Sí\tSoporta ORDER BY junto con ROWNUM y FETCH FIRST.\r\nSQLite\t\t\t✅ Sí\tCompatible, pero puede tener restricciones en combinaciones avanzadas.\r\nMongoDB\tsort() o $sort\tsort() se usa en consultas, y $sort en pipelines de agregación.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Column specification(s) for ordering",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "columns"
      },
      {
        "title": "param",
        "description": "Nombre de la columna por la cual ordenar",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "columns.col"
      },
      {
        "title": "param",
        "description": "Orden de clasificación (ascendente o descendente)",
        "lineNumber": 14,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "ASC"
            },
            {
              "type": "StringLiteralType",
              "value": "DESC"
            }
          ]
        },
        "name": "columns.order"
      },
      {
        "title": "param",
        "description": "Objeto que retorna promesa para el contexto de encadenamiento",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando se llama sin una sentencia SELECT previa",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Ordenamiento simple\r\nqb.select('*').from('users').orderBy([{col: 'name', order: 'ASC'}]);\r\n\r\n// Ordenamiento de múltiples columnas\r\nqb.select('*').from('users').orderBy([\r\n  {col: 'department', order: 'ASC'}, \r\n  {col: 'salary', order: 'DESC'}\r\n]);",
        "lineNumber": 18
      }
    ],
    "loc": {
      "start": {
        "line": 1993,
        "column": 1,
        "index": 76104
      },
      "end": {
        "line": 2022,
        "column": 4,
        "index": 77658
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2023,
          "column": 1,
          "index": 77661
        },
        "end": {
          "line": 2030,
          "column": 2,
          "index": 77927
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Ordenamiento simple\r\nqb.select('*').from('users').orderBy([{col: 'name', order: 'ASC'}]);\r\n\r\n// Ordenamiento de múltiples columnas\r\nqb.select('*').from('users').orderBy([\r\n  {col: 'department', order: 'ASC'}, \r\n  {col: 'salary', order: 'DESC'}\r\n]);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columns",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Column specification(s) for ordering"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "properties": [
          {
            "title": "param",
            "name": "columns.col",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Nombre de la columna por la cual ordenar"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "title": "param",
            "name": "columns.order",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Orden de clasificación (ascendente o descendente)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "ASC"
                },
                {
                  "type": "StringLiteralType",
                  "value": "DESC"
                }
              ]
            }
          }
        ]
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto que retorna promesa para el contexto de encadenamiento"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando se llama sin una sentencia SELECT previa"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "orderBy",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "orderBy",
        "kind": "function"
      }
    ],
    "namespace": "orderBy"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Se usa para restringir la cantidad de filas devueltas por una consulta.\r\nEs útil para paginación y optimización de rendimiento cuando solo se necesitan un número específico de registros.\r\nPostgreSQL\t✅ Sí\tLIMIT y OFFSET funcionan para paginación.\r\nMySQL\t\t\t✅ Sí\tSoporta LIMIT con OFFSET para paginación.\r\nSQL Server\t❌ No\tSe usa TOP n o OFFSET FETCH NEXT en su lugar.\r\nOracle\t\t\t❌ No\tUsa FETCH FIRST n ROWS ONLY para limitar resultados.\r\nSQLite\t\t\t✅ Sí\tCompatible con LIMIT y OFFSET.\r\nMongoDB\tlimit(n)\tSe usa junto con skip(n) para paginación, similar a LIMIT ... OFFSET."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "limit"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Se usa para restringir la cantidad de filas devueltas por una consulta.\r\nEs útil para paginación y optimización de rendimiento cuando solo se necesitan un número específico de registros.\r\nPostgreSQL\t✅ Sí\tLIMIT y OFFSET funcionan para paginación.\r\nMySQL\t\t\t✅ Sí\tSoporta LIMIT con OFFSET para paginación.\r\nSQL Server\t❌ No\tSe usa TOP n o OFFSET FETCH NEXT en su lugar.\r\nOracle\t\t\t❌ No\tUsa FETCH FIRST n ROWS ONLY para limitar resultados.\r\nSQLite\t\t\t✅ Sí\tCompatible con LIMIT y OFFSET.\r\nMongoDB\tlimit(n)\tSe usa junto con skip(n) para paginación, similar a LIMIT ... OFFSET.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "numero de elementos a mostrar",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "limit"
      },
      {
        "title": "param",
        "description": "objeto para el contexto de encadenamiento",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando limit no es un entero positivo o no existe una instrucción SELECT",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Obtener los primeros 10 usuarios\r\nqb.select('*').from('users').limit(10);\r\n// Resultado: SELECT * FROM users LIMIT 10;",
        "lineNumber": 16
      }
    ],
    "loc": {
      "start": {
        "line": 2031,
        "column": 1,
        "index": 77930
      },
      "end": {
        "line": 2053,
        "column": 4,
        "index": 79078
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2054,
          "column": 1,
          "index": 79081
        },
        "end": {
          "line": 2077,
          "column": 2,
          "index": 79713
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Obtener los primeros 10 usuarios\r\nqb.select('*').from('users').limit(10);\r\n// Resultado: SELECT * FROM users LIMIT 10;"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "limit",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numero de elementos a mostrar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "objeto para el contexto de encadenamiento"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando limit no es un entero positivo o no existe una instrucción SELECT"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "limit",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "limit",
        "kind": "function"
      }
    ],
    "namespace": "limit"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Se usa para omitir un número específico de filas antes de comenzar a devolver resultados.\r\nSe suele combinar con LIMIT para implementar paginación.\r\nPostgreSQL\t✅ Sí\tOFFSET y LIMIT permiten paginación eficiente.\r\nMySQL\t\t\t✅ Sí\tSe usa LIMIT ... OFFSET.\r\nSQL Server\t✅ Sí\tUsa OFFSET ... FETCH NEXT para paginación.\r\nOracle\t\t\t✅ Sí\tUsa OFFSET ... FETCH NEXT en lugar de LIMIT.\r\nSQLite\t\t\t✅ Sí\tCompatible con LIMIT y OFFSET.\r\nMongoDB\tskip(n)\tSe usa junto con limit(n) para paginación, similar a OFFSET ... LIMIT."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "offset"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Se usa para omitir un número específico de filas antes de comenzar a devolver resultados.\r\nSe suele combinar con LIMIT para implementar paginación.\r\nPostgreSQL\t✅ Sí\tOFFSET y LIMIT permiten paginación eficiente.\r\nMySQL\t\t\t✅ Sí\tSe usa LIMIT ... OFFSET.\r\nSQL Server\t✅ Sí\tUsa OFFSET ... FETCH NEXT para paginación.\r\nOracle\t\t\t✅ Sí\tUsa OFFSET ... FETCH NEXT en lugar de LIMIT.\r\nSQLite\t\t\t✅ Sí\tCompatible con LIMIT y OFFSET.\r\nMongoDB\tskip(n)\tSe usa junto con limit(n) para paginación, similar a OFFSET ... LIMIT.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "numero de filas que se deben omitir",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "offset"
      },
      {
        "title": "param",
        "description": "objeto para el contexto de encadenamiento",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "throws",
        "description": "Cuando offset no es un entero positivo o no existe una instrucción SELECT",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "// Obtener los usuarios a partir del usuario 21\r\nqb.select('*').from('users').offset(20);\r\n// Resultado: SELECT * FROM users OFFSET 20;",
        "lineNumber": 16
      }
    ],
    "loc": {
      "start": {
        "line": 2078,
        "column": 1,
        "index": 79716
      },
      "end": {
        "line": 2100,
        "column": 4,
        "index": 80824
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2101,
          "column": 1,
          "index": 80827
        },
        "end": {
          "line": 2123,
          "column": 2,
          "index": 81466
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Obtener los usuarios a partir del usuario 21\r\nqb.select('*').from('users').offset(20);\r\n// Resultado: SELECT * FROM users OFFSET 20;"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "offset",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numero de filas que se deben omitir"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "objeto para el contexto de encadenamiento"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando offset no es un entero positivo o no existe una instrucción SELECT"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "offset",
    "memberof": "QueryBuilder.DQL",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "offset",
        "kind": "function"
      }
    ],
    "namespace": "offset"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "whereCursor"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL\r\nDefine la condición \"WHERE CURRENT OF\" para un cursor específico.\r\nEsta cláusula se utiliza en sentencias SQL para referirse a la fila actual apuntada por un cursor.\r\nEs especialmente útil en operaciones de actualización o eliminación donde se desea modificar o eliminar\r\nla fila actual del conjunto de resultados manejado por el cursor.",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "Nombre del cursor",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "cursorName"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.whereCursor('miCursor');",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1248,
        "column": 1,
        "index": 44765
      },
      "end": {
        "line": 1262,
        "column": 4,
        "index": 45451
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1263,
          "column": 1,
          "index": 45454
        },
        "end": {
          "line": 1276,
          "column": 2,
          "index": 45863
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.whereCursor('miCursor');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "cursorName",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del cursor"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "whereCursor",
    "memberof": "QueryBuilder.DQL\r\nDefine la condición \"WHERE CURRENT OF\" para un cursor específico.\r\nEsta cláusula se utiliza en sentencias SQL para referirse a la fila actual apuntada por un cursor.\r\nEs especialmente útil en operaciones de actualización o eliminación donde se desea modificar o eliminar\r\nla fila actual del conjunto de resultados manejado por el cursor.",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "whereCursor",
        "kind": "function"
      }
    ],
    "namespace": "whereCursor"
  },
  {
    "description": "",
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "joins"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DQL\r\nDefine las funciones de JOIN entre tablas\r\nTipos de JOIN soportados:\r\n- CROSS JOIN: Combina todas las filas de dos tablas, produciendo el producto cartesiano.\r\n- NATURAL JOIN: Realiza un JOIN basado en todas las columnas con el mismo nombre en ambas tablas.\r\n- INNER JOIN: Devuelve solo las filas que tienen coincidencias en ambas tablas.\r\n- LEFT JOIN: Devuelve todas las filas de la tabla izquierda y las filas coincidentes de la tabla derecha.\r\n- RIGHT JOIN: Devuelve todas las filas de la tabla derecha y las filas coincidentes de la tabla izquierda.\r\n- FULL JOIN: Devuelve filas cuando hay una coincidencia en una de las tablas.\r\ncada funcion recibe tres parametros",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "tabla o lista de tablas a unir",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "tables"
      },
      {
        "title": "param",
        "description": "tabla o lista de alias aplicables a las tablas en el mismo orden",
        "lineNumber": 13,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "alias"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.joins('tabla1', 'tabla2', 'miCursor');\r\nqb.joins(['tabla1', 'tabla2'], ['t1', 't2'], 'miCursor');\r\n// Errores\r\nqb.joins('tabla1', ['t1', 't2'], 'miCursor'); // Error",
        "lineNumber": 16
      }
    ],
    "loc": {
      "start": {
        "line": 1278,
        "column": 1,
        "index": 45868
      },
      "end": {
        "line": 1301,
        "column": 4,
        "index": 47142
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1302,
          "column": 1,
          "index": 47145
        },
        "end": {
          "line": 1339,
          "column": 2,
          "index": 48241
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.joins('tabla1', 'tabla2', 'miCursor');\r\nqb.joins(['tabla1', 'tabla2'], ['t1', 't2'], 'miCursor');\r\n// Errores\r\nqb.joins('tabla1', ['t1', 't2'], 'miCursor'); // Error"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "tables",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "tabla o lista de tablas a unir"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "alias",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "tabla o lista de alias aplicables a las tablas en el mismo orden"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "joins",
    "memberof": "QueryBuilder.DQL\r\nDefine las funciones de JOIN entre tablas\r\nTipos de JOIN soportados:\r\n- CROSS JOIN: Combina todas las filas de dos tablas, produciendo el producto cartesiano.\r\n- NATURAL JOIN: Realiza un JOIN basado en todas las columnas con el mismo nombre en ambas tablas.\r\n- INNER JOIN: Devuelve solo las filas que tienen coincidencias en ambas tablas.\r\n- LEFT JOIN: Devuelve todas las filas de la tabla izquierda y las filas coincidentes de la tabla derecha.\r\n- RIGHT JOIN: Devuelve todas las filas de la tabla derecha y las filas coincidentes de la tabla izquierda.\r\n- FULL JOIN: Devuelve filas cuando hay una coincidencia en una de las tablas.\r\ncada funcion recibe tres parametros",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "joins",
        "kind": "function"
      }
    ],
    "namespace": "joins"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El operador IN en SQL se utiliza para comprobar si un valor está presente dentro de un conjunto de valores.\r\nEs útil cuando se necesita realizar comparaciones múltiples sin tener que escribir múltiples condiciones OR."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "in"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Predicates",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El operador IN en SQL se utiliza para comprobar si un valor está presente dentro de un conjunto de valores.\r\nEs útil cuando se necesita realizar comparaciones múltiples sin tener que escribir múltiples condiciones OR.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la columna cuyo valor esta contenido el los valores, puede un string o un objeto Column",
        "lineNumber": 6,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        },
        "name": "columna"
      },
      {
        "title": "param",
        "description": "Puede ser un array o una lista de strings u objetos QueryBuilder",
        "lineNumber": 7,
        "type": null,
        "errors": [
          "unexpected token"
        ],
        "name": "values"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior siempre es el ultimo parametro añadido por el Proxy",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.where(in(\"columna1\",valor1, valor2, valor3)) // WHERE columna1 IN (valor1, valor2, valor3);",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1739,
        "column": 1,
        "index": 64189
      },
      "end": {
        "line": 1753,
        "column": 4,
        "index": 65092
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1754,
          "column": 1,
          "index": 65095
        },
        "end": {
          "line": 1760,
          "column": 2,
          "index": 65366
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.where(in(\"columna1\",valor1, valor2, valor3)) // WHERE columna1 IN (valor1, valor2, valor3);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columna",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la columna cuyo valor esta contenido el los valores, puede un string o un objeto Column"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior siempre es el ultimo parametro añadido por el Proxy"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "in",
    "memberof": "QueryBuilder.Predicates",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "in",
        "kind": "function"
      }
    ],
    "namespace": "in"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "El operador NOT IN en SQL se utiliza para filtrar registros cuyo valor NO está presente en un conjunto de valores especificados.\r\nPermite excluir múltiples valores en una sola condición, siendo la negación del operador IN.\r\nFiltrar registros cuyo valor NO está en una lista de valores o en el resultado de una subconsulta.\r\nEs la negación de IN y permite excluir múltiples valores en una sola condición."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "notIn"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Predicates",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "El operador NOT IN en SQL se utiliza para filtrar registros cuyo valor NO está presente en un conjunto de valores especificados.\r\nPermite excluir múltiples valores en una sola condición, siendo la negación del operador IN.\r\nFiltrar registros cuyo valor NO está en una lista de valores o en el resultado de una subconsulta.\r\nEs la negación de IN y permite excluir múltiples valores en una sola condición.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la columna cuyo valor no esta contenido el los valores, puede un string o un objeto Column",
        "lineNumber": 8,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        },
        "name": "columna"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 9,
        "type": null,
        "errors": [
          "unexpected token"
        ],
        "name": "values"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior siempre es el ultimo parametro añadido por el Proxy",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.where(notIn(\"columna1\",valor1, valor2, valor3)) // WHERE columna1 NOT IN (valor1, valor2, valor3);",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 1761,
        "column": 1,
        "index": 65369
      },
      "end": {
        "line": 1777,
        "column": 4,
        "index": 66412
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1778,
          "column": 1,
          "index": 66415
        },
        "end": {
          "line": 1782,
          "column": 2,
          "index": 66577
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.where(notIn(\"columna1\",valor1, valor2, valor3)) // WHERE columna1 NOT IN (valor1, valor2, valor3);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "columna",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la columna cuyo valor no esta contenido el los valores, puede un string o un objeto Column"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior siempre es el ultimo parametro añadido por el Proxy"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "notIn",
    "memberof": "QueryBuilder.Predicates",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "notIn",
        "kind": "function"
      }
    ],
    "namespace": "notIn"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Inserta datos en una tabla especificada.\r\nCrea una instrucción INSERT INTO con valores y especificación opcional de columnas.\r\nSe usa para agregar nuevas filas en una tabla.\r\nPuede insertar valores manualmente o desde el resultado de otra consulta.\r\nPostgreSQL\t✅ Sí\tSoporta INSERT ... RETURNING para obtener valores insertados.\r\nMySQL\t\t\t✅ Sí\tPermite INSERT IGNORE y ON DUPLICATE KEY UPDATE para manejar duplicados.\r\nSQL Server\t✅ Sí\tCompatible con INSERT INTO ... OUTPUT.\r\nOracle\t\t\t✅ Sí\tUsa INSERT ... RETURNING INTO para recuperar valores insertados.\r\nSQLite\t\t\t✅ Sí\tAdmite INSERT OR REPLACE y INSERT OR IGNORE.\r\nMongoDB\tinsertOne(), insertMany()\tinsertOne() agrega un solo documento, insertMany() varios a la vez."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "insert"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DML",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Inserta datos en una tabla especificada.\r\nCrea una instrucción INSERT INTO con valores y especificación opcional de columnas.\r\nSe usa para agregar nuevas filas en una tabla.\r\nPuede insertar valores manualmente o desde el resultado de otra consulta.\r\nPostgreSQL\t✅ Sí\tSoporta INSERT ... RETURNING para obtener valores insertados.\r\nMySQL\t\t\t✅ Sí\tPermite INSERT IGNORE y ON DUPLICATE KEY UPDATE para manejar duplicados.\r\nSQL Server\t✅ Sí\tCompatible con INSERT INTO ... OUTPUT.\r\nOracle\t\t\t✅ Sí\tUsa INSERT ... RETURNING INTO para recuperar valores insertados.\r\nSQLite\t\t\t✅ Sí\tAdmite INSERT OR REPLACE y INSERT OR IGNORE.\r\nMongoDB\tinsertOne(), insertMany()\tinsertOne() agrega un solo documento, insertMany() varios a la vez.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "nombre de la tabla",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "table"
      },
      {
        "title": "param",
        "description": "Array de Arrays con los valores",
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "array"
          },
          "applications": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Value"
                }
              ]
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "param",
        "description": "columnas correspondientes al orden de los valores o vacio para el orden por defecto",
        "lineNumber": 16,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Column"
            }
          ]
        },
        "name": "cols"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando los parámetros no coinciden con los tipos esperados",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Inserción simple\r\nawait qb.insert('users', [\r\n  ['Alice', 'alice@example.com'],\r\n  ['Bob', 'bob@example.com']\r\n]);\r\n// Inserción con columnas especificadas\r\nawait qb.insert('users', [\r\n  ['Charlie', 'charlie@example.com']\r\n], ['name', 'email']);",
        "lineNumber": 20
      }
    ],
    "loc": {
      "start": {
        "line": 2130,
        "column": 1,
        "index": 81700
      },
      "end": {
        "line": 2162,
        "column": 4,
        "index": 83322
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2164,
          "column": 1,
          "index": 83327
        },
        "end": {
          "line": 2182,
          "column": 2,
          "index": 83900
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Inserción simple\r\nawait qb.insert('users', [\r\n  ['Alice', 'alice@example.com'],\r\n  ['Bob', 'bob@example.com']\r\n]);\r\n// Inserción con columnas especificadas\r\nawait qb.insert('users', [\r\n  ['Charlie', 'charlie@example.com']\r\n], ['name', 'email']);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "table",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "nombre de la tabla"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "values",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array de Arrays con los valores"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "array"
          },
          "applications": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Value"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "cols",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "columnas correspondientes al orden de los valores o vacio para el orden por defecto"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "Column"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando los parámetros no coinciden con los tipos esperados"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "insert",
    "memberof": "QueryBuilder.DML",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "insert",
        "kind": "function"
      }
    ],
    "namespace": "insert"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea la sentencia UPDATE con cláusula SET para la tabla especificada"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "update"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DML",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea la sentencia UPDATE con cláusula SET para la tabla especificada",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre de la tabla objetivo para actualizar",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "table"
      },
      {
        "title": "param",
        "description": "Objeto con pares columna-valor para actualizar",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "sets"
      },
      {
        "title": "param",
        "description": "Objeto que retorna promesa para el contexto de encadenamiento",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      },
      {
        "title": "throws",
        "description": "Cuando los parámetros no coinciden con los tipos esperados",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "// Actualización simple\r\nqb.update('users', { status: 'active', last_login: new Date() })\r\n        .where('id = 1')\r\n\t\t .toString(); // UPDATE users SET status = 'active', last_login = '2023-10-05 12:34:56' WHERE id = 1;\r\n\r\n// Actualizar con condiciones\r\nqb.update('products', { price: 19.99, discount: 10 })\r\n        .where('category = \"electronics\"')\r\n        .toString(); // UPDATE products SET price = 19.99, discount = 10 WHERE category = 'electronics';",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 2186,
        "column": 1,
        "index": 83977
      },
      "end": {
        "line": 2208,
        "column": 4,
        "index": 85063
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2209,
          "column": 1,
          "index": 85066
        },
        "end": {
          "line": 2223,
          "column": 2,
          "index": 85522
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Actualización simple\r\nqb.update('users', { status: 'active', last_login: new Date() })\r\n        .where('id = 1')\r\n\t\t .toString(); // UPDATE users SET status = 'active', last_login = '2023-10-05 12:34:56' WHERE id = 1;\r\n\r\n// Actualizar con condiciones\r\nqb.update('products', { price: 19.99, discount: 10 })\r\n        .where('category = \"electronics\"')\r\n        .toString(); // UPDATE products SET price = 19.99, discount = 10 WHERE category = 'electronics';"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "table",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la tabla objetivo para actualizar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "sets",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto con pares columna-valor para actualizar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto que retorna promesa para el contexto de encadenamiento"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando los parámetros no coinciden con los tipos esperados"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "update",
    "memberof": "QueryBuilder.DML",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "update",
        "kind": "function"
      }
    ],
    "namespace": "update"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea la sentencia DELETE FROM para eliminar datos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "delete"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.DML",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea la sentencia DELETE FROM para eliminar datos",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre de la tabla de la cual eliminar registros",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "from"
      },
      {
        "title": "param",
        "description": "Objeto que retorna promesa para el contexto de encadenamiento",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "// Eliminar registros específicos\r\nqb.delete('users')\r\n        .where('active = 0')\r\n        .toString(); // DELETE FROM users WHERE active = 0;\r\n\r\n// Eliminar con condiciones complejas\r\nqb.delete('logs')\r\n        .where('created_at < \"2023-01-01\"')\r\n        .toString(); // DELETE FROM logs WHERE created_at < '2023-01-01';",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 2225,
        "column": 1,
        "index": 85527
      },
      "end": {
        "line": 2245,
        "column": 4,
        "index": 86300
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2246,
          "column": 1,
          "index": 86303
        },
        "end": {
          "line": 2254,
          "column": 2,
          "index": 86543
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Eliminar registros específicos\r\nqb.delete('users')\r\n        .where('active = 0')\r\n        .toString(); // DELETE FROM users WHERE active = 0;\r\n\r\n// Eliminar con condiciones complejas\r\nqb.delete('logs')\r\n        .where('created_at < \"2023-01-01\"')\r\n        .toString(); // DELETE FROM logs WHERE created_at < '2023-01-01';"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "from",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la tabla de la cual eliminar registros"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto que retorna promesa para el contexto de encadenamiento"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "delete",
    "memberof": "QueryBuilder.DML",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "delete",
        "kind": "function"
      }
    ],
    "namespace": "delete"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una función SQL SUBSTR para extraer una subcadena de una cadena dada.\r\nPermite especificar la columna, posición inicial y longitud opcional de la subcadena.\r\nÚtil para manipulación de cadenas en consultas SQL."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "substr"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Functions",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una función SQL SUBSTR para extraer una subcadena de una cadena dada.\r\nPermite especificar la columna, posición inicial y longitud opcional de la subcadena.\r\nÚtil para manipulación de cadenas en consultas SQL.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "columna sobre la que se aplica la función",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Column"
            }
          ]
        },
        "name": "column"
      },
      {
        "title": "param",
        "description": "posición inicial de la subcadena",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "inicio"
      },
      {
        "title": "param",
        "description": "longitud de la subcadena (opcional)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "longitud"
      },
      {
        "title": "param",
        "description": "objeto recibido por el comando anterior",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.substr('nombre', 1, 3) // SUBSTR(nombre, 1, 3)",
        "lineNumber": 12
      }
    ],
    "loc": {
      "start": {
        "line": 2299,
        "column": 1,
        "index": 88143
      },
      "end": {
        "line": 2315,
        "column": 5,
        "index": 88920
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2316,
          "column": 1,
          "index": 88923
        },
        "end": {
          "line": 2322,
          "column": 2,
          "index": 89089
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.substr('nombre', 1, 3) // SUBSTR(nombre, 1, 3)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "column",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "columna sobre la que se aplica la función"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Column"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "inicio",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "posición inicial de la subcadena"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "longitud",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "longitud de la subcadena (opcional)"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "substr",
    "memberof": "QueryBuilder.Functions",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "substr",
        "kind": "function"
      }
    ],
    "namespace": "substr"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una expresión SQL CASE para evaluaciones condicionales.\r\nPermite definir múltiples condiciones y resultados, con un caso por defecto opcional.\r\nÚtil para lógica condicional directamente en consultas SQL.\r\nSintaxis:\r\ncolumna = CASE [WHEN condicion THEN resultado,..] ELSE defecto END"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "case"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Functions",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una expresión SQL CASE para evaluaciones condicionales.\r\nPermite definir múltiples condiciones y resultados, con un caso por defecto opcional.\r\nÚtil para lógica condicional directamente en consultas SQL.\r\nSintaxis:\r\ncolumna = CASE [WHEN condicion THEN resultado,..] ELSE defecto END",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "columna",
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        },
        "name": "column"
      },
      {
        "title": "param",
        "description": "[condicion, resultado]",
        "lineNumber": 10,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "column"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        },
        "name": "casos"
      },
      {
        "title": "param",
        "description": "Caso else",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "defecto"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "// Expresión CASE simple\r\nqb.case('status', [\r\n  [1, 'Active'],\r\n  [0, 'Inactive']\r\n], 'Unknown'); // CASE status WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' ELSE 'Unknown' END\r\n\r\n// Using Column objects\r\nqb.case(column('status'), [\r\n  [1, 'Active'],\r\n  [0, 'Inactive']\r\n], 'Unknown'); // CASE status WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' ELSE 'Unknown' END\r\n\r\n// Complex conditions\r\nqb.case(null, [\r\n  [qb.eq('age', 18), 'Adult'],\r\n  [qb.lt('age', 18), 'Minor']\r\n], 'Unknown'); // CASE WHEN age = 18 THEN 'Adult' WHEN age < 18 THEN 'Minor' ELSE 'Unknown' END",
        "lineNumber": 14
      }
    ],
    "loc": {
      "start": {
        "line": 2324,
        "column": 1,
        "index": 89094
      },
      "end": {
        "line": 2357,
        "column": 4,
        "index": 90451
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2358,
          "column": 1,
          "index": 90454
        },
        "end": {
          "line": 2361,
          "column": 2,
          "index": 90605
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Expresión CASE simple\r\nqb.case('status', [\r\n  [1, 'Active'],\r\n  [0, 'Inactive']\r\n], 'Unknown'); // CASE status WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' ELSE 'Unknown' END\r\n\r\n// Using Column objects\r\nqb.case(column('status'), [\r\n  [1, 'Active'],\r\n  [0, 'Inactive']\r\n], 'Unknown'); // CASE status WHEN 1 THEN 'Active' WHEN 0 THEN 'Inactive' ELSE 'Unknown' END\r\n\r\n// Complex conditions\r\nqb.case(null, [\r\n  [qb.eq('age', 18), 'Adult'],\r\n  [qb.lt('age', 18), 'Minor']\r\n], 'Unknown'); // CASE WHEN age = 18 THEN 'Adult' WHEN age < 18 THEN 'Minor' ELSE 'Unknown' END"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "column",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "columna"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "column"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "casos",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "[condicion, resultado]"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "column"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "defecto",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Caso else"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "case",
    "memberof": "QueryBuilder.Functions",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "case",
        "kind": "function"
      }
    ],
    "namespace": "case"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea métodos para funciones comunes de fecha y hora en SQL.\r\nGenera funciones como CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, LOCALTIME, LOCALTIMESTAMP.\r\nÚtil para obtener marcas de tiempo y fechas actuales en consultas SQL."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "functionDate"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Functions",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea métodos para funciones comunes de fecha y hora en SQL.\r\nGenera funciones como CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, LOCALTIME, LOCALTIMESTAMP.\r\nÚtil para obtener marcas de tiempo y fechas actuales en consultas SQL.",
        "lineNumber": 3
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "example",
        "description": "qb.currentDate(); // CURRENT_DATE\r\nqb.currentTime(); // CURRENT_TIME\r\nqb.currentTimestamp(); // CURRENT_TIMESTAMP\r\nqb.localTime(); // LOCALTIME\r\nqb.localTimestamp(); // LOCALTIMESTAMP",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 2363,
        "column": 1,
        "index": 90610
      },
      "end": {
        "line": 2379,
        "column": 4,
        "index": 91260
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2380,
          "column": 1,
          "index": 91263
        },
        "end": {
          "line": 2391,
          "column": 2,
          "index": 91521
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.currentDate(); // CURRENT_DATE\r\nqb.currentTime(); // CURRENT_TIME\r\nqb.currentTimestamp(); // CURRENT_TIMESTAMP\r\nqb.localTime(); // LOCALTIME\r\nqb.localTimestamp(); // LOCALTIMESTAMP"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "functionDate",
    "memberof": "QueryBuilder.Functions",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "functionDate",
        "kind": "function"
      }
    ],
    "namespace": "functionDate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea un nuevo cursor para la consulta actual."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "createCursor"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Cursors",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea un nuevo cursor para la consulta actual.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre del cursor",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Expresión SQL para el cursor",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "expresion"
      },
      {
        "title": "param",
        "description": "Opciones adicionales para el cursor",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando los parámetros no coinciden con los tipos esperados",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "qb.createCursor('myCursor', 'SELECT * FROM users', {}, {});\r\n// Resultado: DECLARE myCursor CURSOR FOR SELECT * FROM users;",
        "lineNumber": 11
      }
    ],
    "loc": {
      "start": {
        "line": 2393,
        "column": 1,
        "index": 91526
      },
      "end": {
        "line": 2409,
        "column": 4,
        "index": 92234
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2410,
          "column": 1,
          "index": 92237
        },
        "end": {
          "line": 2419,
          "column": 2,
          "index": 92557
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.createCursor('myCursor', 'SELECT * FROM users', {}, {});\r\n// Resultado: DECLARE myCursor CURSOR FOR SELECT * FROM users;"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del cursor"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "expresion",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Expresión SQL para el cursor"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones adicionales para el cursor"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando los parámetros no coinciden con los tipos esperados"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "createCursor",
    "memberof": "QueryBuilder.Cursors",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "createCursor",
        "kind": "function"
      }
    ],
    "namespace": "createCursor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Abre un cursor existente."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "openCursor"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Cursors",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Abre un cursor existente.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre del cursor",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando el cursor no existe o no se puede abrir",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "qb.openCursor('myCursor', {});",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 2421,
        "column": 1,
        "index": 92562
      },
      "end": {
        "line": 2434,
        "column": 4,
        "index": 93010
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2435,
          "column": 1,
          "index": 93013
        },
        "end": {
          "line": 2443,
          "column": 2,
          "index": 93210
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.openCursor('myCursor', {});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del cursor"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando el cursor no existe o no se puede abrir"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "openCursor",
    "memberof": "QueryBuilder.Cursors",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "openCursor",
        "kind": "function"
      }
    ],
    "namespace": "openCursor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Cierra un cursor existente."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "closeCursor"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Cursors",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Cierra un cursor existente.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Nombre del cursor",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Objeto recibido por el comando anterior",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "next"
      },
      {
        "title": "returns",
        "description": "Objeto QueryBuilder pasado al siguiente comando para encadenar",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "throws",
        "description": "Cuando el cursor no existe o no se puede cerrar",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "example",
        "description": "qb.closeCursor('myCursor', {});",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 2445,
        "column": 1,
        "index": 93215
      },
      "end": {
        "line": 2458,
        "column": 4,
        "index": 93668
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2459,
          "column": 1,
          "index": 93671
        },
        "end": {
          "line": 2467,
          "column": 2,
          "index": 93874
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "qb.closeCursor('myCursor', {});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del cursor"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto recibido por el comando anterior"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto QueryBuilder pasado al siguiente comando para encadenar"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cuando el cursor no existe o no se puede cerrar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "closeCursor",
    "memberof": "QueryBuilder.Cursors",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "closeCursor",
        "kind": "function"
      }
    ],
    "namespace": "closeCursor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Crea una nueva transacción para agrupar múltiples operaciones SQL.\r\nPermite iniciar, confirmar o revertir transacciones."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "setTransaction"
      },
      {
        "title": "memberof",
        "description": "QueryBuilder.Transactions",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Crea una nueva transacción para agrupar múltiples operaciones SQL.\r\nPermite iniciar, confirmar o revertir transacciones.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "Opciones para la transacción",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "options"
      },
      {
        "title": "returns",
        "description": "Objeto Transaction para manejar la transacción",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Transaction"
        }
      },
      {
        "title": "example",
        "description": "const transaction = qb.setTransaction({ isolationLevel: 'SERIALIZABLE' });",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 2468,
        "column": 1,
        "index": 93877
      },
      "end": {
        "line": 2480,
        "column": 4,
        "index": 94338
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2481,
          "column": 1,
          "index": 94341
        },
        "end": {
          "line": 2485,
          "column": 2,
          "index": 94483
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const transaction = qb.setTransaction({ isolationLevel: 'SERIALIZABLE' });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones para la transacción"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto Transaction para manejar la transacción"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Transaction"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "setTransaction",
    "memberof": "QueryBuilder.Transactions",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "setTransaction",
        "kind": "function"
      }
    ],
    "namespace": "setTransaction"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Getter y setter para querybuilder"
            }
          ]
        }
      ]
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 2639,
        "column": 1,
        "index": 99853
      },
      "end": {
        "line": 2639,
        "column": 41,
        "index": 99893
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2641,
          "column": 1,
          "index": 99898
        },
        "end": {
          "line": 2643,
          "column": 2,
          "index": 99950
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 2641
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "result",
    "kind": "member",
    "memberof": "QueryBuilder.QueryBuilder",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "result",
        "kind": "member",
        "scope": "instance"
      }
    ],
    "namespace": "#result"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "QueryBuilder Core Package - API fluida para construir y ejecutar consultas de base de datos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "fileoverview",
        "description": "QueryBuilder Core Package - API fluida para construir y ejecutar consultas de base de datos",
        "lineNumber": 1
      },
      {
        "title": "version",
        "description": "2.0.0",
        "lineNumber": 2
      },
      {
        "title": "author",
        "description": "Miguel E. Llambías Llansó",
        "lineNumber": 3
      },
      {
        "title": "license",
        "description": "MPL-2.0",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0,
        "index": 301
      },
      "end": {
        "line": 14,
        "column": 3,
        "index": 497
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 185,
          "column": 0,
          "index": 6990
        },
        "end": {
          "line": 2903,
          "column": 1,
          "index": 107040
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "language",
        "lineNumber": 186
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 186,
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "file",
    "version": "2.0.0",
    "author": "Miguel E. Llambías Llansó",
    "license": "MPL-2.0",
    "name": "QueryBuilder",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funcionalidad principal y clases base del paquete core"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Core"
            },
            {
              "title": "description",
              "description": "Funcionalidad principal y clases base del paquete core",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0,
              "index": 1899
            },
            "end": {
              "line": 52,
              "column": 3,
              "index": 2039
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Core",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Core",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Core"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DDL"
            },
            {
              "title": "description",
              "description": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 0,
              "index": 2043
            },
            "end": {
              "line": 65,
              "column": 3,
              "index": 2563
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DDL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DDL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DDL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DML"
            },
            {
              "title": "description",
              "description": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 0,
              "index": 2567
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 2997
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DML",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DML",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DML"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DQL"
            },
            {
              "title": "description",
              "description": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 0,
              "index": 3001
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3413
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DQL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DQL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DQL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DCL"
            },
            {
              "title": "description",
              "description": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 0,
              "index": 3417
            },
            "end": {
              "line": 100,
              "column": 3,
              "index": 3787
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DCL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DCL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DCL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Predicates"
            },
            {
              "title": "description",
              "description": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 0,
              "index": 3791
            },
            "end": {
              "line": 111,
              "column": 3,
              "index": 4197
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Predicates",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Predicates",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Predicates"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Functions"
            },
            {
              "title": "description",
              "description": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 0,
              "index": 4201
            },
            "end": {
              "line": 122,
              "column": 3,
              "index": 4583
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Functions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Functions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Functions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Transactions"
            },
            {
              "title": "description",
              "description": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0,
              "index": 4587
            },
            "end": {
              "line": 135,
              "column": 3,
              "index": 4938
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Transactions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Transactions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Transactions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Cursors"
            },
            {
              "title": "description",
              "description": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 0,
              "index": 4942
            },
            "end": {
              "line": 148,
              "column": 3,
              "index": 5348
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Cursors",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Cursors",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Cursors"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Adapters"
            },
            {
              "title": "description",
              "description": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 150,
              "column": 0,
              "index": 5352
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 5848
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Adapters",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Adapters",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Adapters"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Extensions"
            },
            {
              "title": "description",
              "description": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 0,
              "index": 5852
            },
            "end": {
              "line": 173,
              "column": 3,
              "index": 6225
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Extensions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Extensions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Extensions"
        }
      ]
    },
    "path": [
      {
        "name": "QueryBuilder",
        "kind": "file"
      }
    ],
    "namespace": "QueryBuilder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Paquete principal @QueryBuilder que proporciona una API fluida para construir y ejecutar consultas de base de datos.\r\nEl core es "
            },
            {
              "type": "strong",
              "children": [
                {
                  "type": "text",
                  "value": "obligatorio"
                }
              ]
            },
            {
              "type": "text",
              "value": " y contiene toda la funcionalidad base para SQL estándar.\r\nLos adaptadores de base de datos específicos (MySQL, PostgreSQL, MongoDB, etc.) son "
            },
            {
              "type": "strong",
              "children": [
                {
                  "type": "text",
                  "value": "opcionales"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "strong",
              "children": [
                {
                  "type": "text",
                  "value": "Estructura del paquete:"
                }
              ]
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/core"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OBLIGATORIO]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Funcionalidad base y API principal"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/mysql"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para MySQL"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/postgresql"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para PostgreSQL"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/mongodb"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para MongoDB"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/sqlite"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para SQLite"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/redis"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para Redis"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/cassandra"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para Cassandra"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "@querybuilder/chroma"
                    },
                    {
                      "type": "text",
                      "value": " - "
                    },
                    {
                      "type": "strong",
                      "children": [
                        {
                          "type": "text",
                          "value": "[OPCIONAL]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "value": " Adaptador para ChromaDB"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "fileoverview",
        "description": "QueryBuilder Core Package",
        "lineNumber": 1
      },
      {
        "title": "description",
        "description": "Paquete principal @QueryBuilder que proporciona una API fluida para construir y ejecutar consultas de base de datos.\r\nEl core es **obligatorio** y contiene toda la funcionalidad base para SQL estándar.\r\nLos adaptadores de base de datos específicos (MySQL, PostgreSQL, MongoDB, etc.) son **opcionales**.\r\n\r\n**Estructura del paquete:**\r\n- `@querybuilder/core` - **[OBLIGATORIO]** Funcionalidad base y API principal\r\n- `@querybuilder/mysql` - **[OPCIONAL]** Adaptador para MySQL\r\n- `@querybuilder/postgresql` - **[OPCIONAL]** Adaptador para PostgreSQL  \r\n- `@querybuilder/mongodb` - **[OPCIONAL]** Adaptador para MongoDB\r\n- `@querybuilder/sqlite` - **[OPCIONAL]** Adaptador para SQLite\r\n- `@querybuilder/redis` - **[OPCIONAL]** Adaptador para Redis\r\n- `@querybuilder/cassandra` - **[OPCIONAL]** Adaptador para Cassandra\r\n- `@querybuilder/chroma` - **[OPCIONAL]** Adaptador para ChromaDB",
        "lineNumber": 2
      },
      {
        "title": "example",
        "description": "// Instalación básica (solo core)\r\nnpm install @querybuilder/core\r\n\r\n// Con adaptador específico\r\nnpm install @querybuilder/core @querybuilder/mysql\r\n\r\n// Uso básico\r\nimport QueryBuilder from '@querybuilder/core';\r\nimport MySQL from '@querybuilder/mysql';\r\n\r\nconst qb = new QueryBuilder(MySQL);\r\nqb.select('*').from('users').where('active = 1');",
        "lineNumber": 17
      }
    ],
    "loc": {
      "start": {
        "line": 16,
        "column": 0,
        "index": 501
      },
      "end": {
        "line": 46,
        "column": 3,
        "index": 1895
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 185,
          "column": 0,
          "index": 6990
        },
        "end": {
          "line": 2903,
          "column": 1,
          "index": 107040
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Instalación básica (solo core)\r\nnpm install @querybuilder/core\r\n\r\n// Con adaptador específico\r\nnpm install @querybuilder/core @querybuilder/mysql\r\n\r\n// Uso básico\r\nimport QueryBuilder from '@querybuilder/core';\r\nimport MySQL from '@querybuilder/mysql';\r\n\r\nconst qb = new QueryBuilder(MySQL);\r\nqb.select('*').from('users').where('active = 1');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "language",
        "lineNumber": 186
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 186,
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "file",
    "name": "QueryBuilder",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funcionalidad principal y clases base del paquete core"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Core"
            },
            {
              "title": "description",
              "description": "Funcionalidad principal y clases base del paquete core",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0,
              "index": 1899
            },
            "end": {
              "line": 52,
              "column": 3,
              "index": 2039
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Core",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Core",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Core"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DDL"
            },
            {
              "title": "description",
              "description": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 0,
              "index": 2043
            },
            "end": {
              "line": 65,
              "column": 3,
              "index": 2563
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DDL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DDL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DDL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DML"
            },
            {
              "title": "description",
              "description": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 0,
              "index": 2567
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 2997
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DML",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DML",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DML"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DQL"
            },
            {
              "title": "description",
              "description": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 0,
              "index": 3001
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3413
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DQL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DQL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DQL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DCL"
            },
            {
              "title": "description",
              "description": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 0,
              "index": 3417
            },
            "end": {
              "line": 100,
              "column": 3,
              "index": 3787
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DCL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DCL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DCL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Predicates"
            },
            {
              "title": "description",
              "description": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 0,
              "index": 3791
            },
            "end": {
              "line": 111,
              "column": 3,
              "index": 4197
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Predicates",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Predicates",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Predicates"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Functions"
            },
            {
              "title": "description",
              "description": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 0,
              "index": 4201
            },
            "end": {
              "line": 122,
              "column": 3,
              "index": 4583
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Functions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Functions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Functions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Transactions"
            },
            {
              "title": "description",
              "description": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0,
              "index": 4587
            },
            "end": {
              "line": 135,
              "column": 3,
              "index": 4938
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Transactions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Transactions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Transactions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Cursors"
            },
            {
              "title": "description",
              "description": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 0,
              "index": 4942
            },
            "end": {
              "line": 148,
              "column": 3,
              "index": 5348
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Cursors",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Cursors",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Cursors"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Adapters"
            },
            {
              "title": "description",
              "description": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 150,
              "column": 0,
              "index": 5352
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 5848
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Adapters",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Adapters",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Adapters"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Extensions"
            },
            {
              "title": "description",
              "description": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 0,
              "index": 5852
            },
            "end": {
              "line": 173,
              "column": 3,
              "index": 6225
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Extensions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Extensions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Extensions"
        }
      ]
    },
    "path": [
      {
        "name": "QueryBuilder",
        "kind": "file"
      }
    ],
    "namespace": "QueryBuilder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clase principal QueryBuilder que proporciona una API fluida para construir y ejecutar consultas de base de datos.\r\nDelega la sintaxis SQL/NoSQL a adaptadores de lenguaje (MySQL, PostgreSQL, MongoDB, etc.) derivados de la clase Core.\r\nSoporta construcción y ejecución de consultas, gestión de conexiones, transacciones y cursores usando clases drivers derivadas de la clase Driver.\r\nSoporta múltiples paradigmas de base de datos (SQL, NoSQL, Vector, En-Memoria)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 5,
        "type": null,
        "name": "QueryBuilder"
      },
      {
        "title": "param",
        "description": "Clase de lenguaje (adaptador SQL/NoSQL) derivada de Core",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Core"
        },
        "name": "language"
      },
      {
        "title": "param",
        "description": "Opciones de configuración para QueryBuilder",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "queryBuilderOptions"
          }
        },
        "name": "options"
      },
      {
        "title": "returns",
        "description": "Instancia de QueryBuilder para encadenar métodos",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 175,
        "column": 0,
        "index": 6229
      },
      "end": {
        "line": 184,
        "column": 3,
        "index": 6988
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 185,
          "column": 0,
          "index": 6990
        },
        "end": {
          "line": 2903,
          "column": 1,
          "index": 107040
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "language",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Clase de lenguaje (adaptador SQL/NoSQL) derivada de Core"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Core"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones de configuración para QueryBuilder"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "queryBuilderOptions"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia de QueryBuilder para encadenar métodos"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "class",
    "name": "QueryBuilder",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funcionalidad principal y clases base del paquete core"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Core"
            },
            {
              "title": "description",
              "description": "Funcionalidad principal y clases base del paquete core",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0,
              "index": 1899
            },
            "end": {
              "line": 52,
              "column": 3,
              "index": 2039
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Core",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Core",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Core"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DDL"
            },
            {
              "title": "description",
              "description": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 0,
              "index": 2043
            },
            "end": {
              "line": 65,
              "column": 3,
              "index": 2563
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DDL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DDL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DDL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DML"
            },
            {
              "title": "description",
              "description": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 0,
              "index": 2567
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 2997
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DML",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DML",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DML"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DQL"
            },
            {
              "title": "description",
              "description": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 0,
              "index": 3001
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3413
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DQL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DQL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DQL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DCL"
            },
            {
              "title": "description",
              "description": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 0,
              "index": 3417
            },
            "end": {
              "line": 100,
              "column": 3,
              "index": 3787
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DCL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DCL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DCL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Predicates"
            },
            {
              "title": "description",
              "description": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 0,
              "index": 3791
            },
            "end": {
              "line": 111,
              "column": 3,
              "index": 4197
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Predicates",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Predicates",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Predicates"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Functions"
            },
            {
              "title": "description",
              "description": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 0,
              "index": 4201
            },
            "end": {
              "line": 122,
              "column": 3,
              "index": 4583
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Functions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Functions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Functions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Transactions"
            },
            {
              "title": "description",
              "description": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0,
              "index": 4587
            },
            "end": {
              "line": 135,
              "column": 3,
              "index": 4938
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Transactions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Transactions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Transactions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Cursors"
            },
            {
              "title": "description",
              "description": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 0,
              "index": 4942
            },
            "end": {
              "line": 148,
              "column": 3,
              "index": 5348
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Cursors",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Cursors",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Cursors"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Adapters"
            },
            {
              "title": "description",
              "description": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 150,
              "column": 0,
              "index": 5352
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 5848
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Adapters",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Adapters",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Adapters"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Extensions"
            },
            {
              "title": "description",
              "description": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 0,
              "index": 5852
            },
            "end": {
              "line": 173,
              "column": 3,
              "index": 6225
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Extensions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Extensions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Extensions"
        }
      ]
    },
    "path": [
      {
        "name": "QueryBuilder",
        "kind": "class"
      }
    ],
    "namespace": "QueryBuilder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clase que representa una columna en una consulta SQL."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "description",
        "description": "Clase que representa una columna en una consulta SQL.",
        "lineNumber": 1
      },
      {
        "title": "author",
        "description": "Miguel E. LLambias <mellambias@gmail.com>",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 4,
        "column": 3,
        "index": 133
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6,
          "column": 0,
          "index": 137
        },
        "end": {
          "line": 6,
          "column": 45,
          "index": 182
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "author": "Miguel E. LLambias <mellambias@gmail.com>",
    "name": "QueryBuilder",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funcionalidad principal y clases base del paquete core"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Core"
            },
            {
              "title": "description",
              "description": "Funcionalidad principal y clases base del paquete core",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0,
              "index": 1899
            },
            "end": {
              "line": 52,
              "column": 3,
              "index": 2039
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Core",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Core",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Core"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DDL"
            },
            {
              "title": "description",
              "description": "Comandos de Definición de Datos (Data Definition Language)\r\nOperaciones para crear, modificar y eliminar estructuras de base de datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 0,
              "index": 2043
            },
            "end": {
              "line": 65,
              "column": 3,
              "index": 2563
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// CREATE, ALTER, DROP para tablas, bases de datos, esquemas, etc.\r\nqb.createDatabase('mydb');\r\nqb.createTable('users', { cols: { id: 'INTEGER', name: 'VARCHAR(255)' } });\r\nqb.alterTable('users').addColumn('email', { type: 'VARCHAR(255)' });\r\nqb.dropTable('old_table');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DDL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DDL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DDL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DML"
            },
            {
              "title": "description",
              "description": "Comandos de Manipulación de Datos (Data Manipulation Language)\r\nOperaciones para insertar, actualizar y eliminar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 0,
              "index": 2567
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 2997
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// INSERT, UPDATE, DELETE\r\nqb.insert('users', [['John', 'john@email.com']], ['name', 'email']);\r\nqb.update('users', { status: 'active' }).where('id = 1');\r\nqb.delete('users').where('active = 0');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DML",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DML",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DML"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DQL"
            },
            {
              "title": "description",
              "description": "Comandos de Consulta de Datos (Data Query Language)\r\nOperaciones para consultar y recuperar datos",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 0,
              "index": 3001
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3413
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY, etc.\r\nqb.select(['name', 'email']).from('users').where('active = 1');\r\nqb.select('*').from('users', 'u').innerJoin('orders', 'o').on('u.id = o.user_id');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DQL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DQL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DQL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.DCL"
            },
            {
              "title": "description",
              "description": "Comandos de Control de Datos (Data Control Language)\r\nOperaciones para gestionar permisos y acceso",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 0,
              "index": 3417
            },
            "end": {
              "line": 100,
              "column": 3,
              "index": 3787
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// GRANT, REVOKE, CREATE ROLE, etc.\r\nqb.grant('SELECT', 'users', 'read_user');\r\nqb.createRoles(['admin', 'editor']);\r\nqb.revoke('DELETE', 'users', 'editor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.DCL",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.DCL",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.DCL"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Predicates"
            },
            {
              "title": "description",
              "description": "Predicados y operadores para construcción de condiciones\r\nOperadores de comparación, lógicos y de existencia",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 0,
              "index": 3791
            },
            "end": {
              "line": 111,
              "column": 3,
              "index": 4197
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Operadores de comparación y lógicos\r\nqb.where(qb.and(qb.eq('active', 1), qb.gt('age', 18)));\r\nqb.where(qb.or(qb.like('name', 'John%'), qb.in('status', ['active', 'pending'])));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Predicates",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Predicates",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Predicates"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Functions"
            },
            {
              "title": "description",
              "description": "Funciones SQL agregadas y escalares\r\nFunciones matemáticas, de cadena, fecha y agregación",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 0,
              "index": 4201
            },
            "end": {
              "line": 122,
              "column": 3,
              "index": 4583
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones agregadas y escalares\r\nqb.select([qb.count('*'), qb.max('salary'), qb.upper('name')]);\r\nqb.select(qb.case('status', [[1, 'Active'], [0, 'Inactive']], 'Unknown'));"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Functions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Functions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Functions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Transactions"
            },
            {
              "title": "description",
              "description": "Gestión de transacciones y puntos de guardado\r\nControl de transacciones para operaciones atómicas",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0,
              "index": 4587
            },
            "end": {
              "line": 135,
              "column": 3,
              "index": 4938
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Control de transacciones\r\nqb.startTransaction();\r\nqb.setSavePoint('checkpoint1');\r\nqb.commit();\r\nqb.rollback('checkpoint1');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Transactions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Transactions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Transactions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Cursors"
            },
            {
              "title": "description",
              "description": "Gestión de cursores para procesamiento de grandes datasets\r\nCreación, apertura, navegación y cierre de cursores",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 0,
              "index": 4942
            },
            "end": {
              "line": 148,
              "column": 3,
              "index": 5348
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Manejo de cursores\r\nqb.createCursor('userCursor', 'SELECT * FROM users');\r\nqb.openCursor('userCursor');\r\nqb.fetch('userCursor', variables);\r\nqb.closeCursor('userCursor');"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Cursors",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Cursors",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Cursors"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Adapters"
            },
            {
              "title": "description",
              "description": "Adaptadores opcionales para bases de datos específicas\r\nCada adaptador extiende el core con funcionalidad específica del SGBD",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 150,
              "column": 0,
              "index": 5352
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 5848
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Los adaptadores son paquetes separados opcionales\r\n// @querybuilder/mysql, @querybuilder/postgresql, etc.\r\nimport MySQL from '@querybuilder/mysql';\r\nimport PostgreSQL from '@querybuilder/postgresql';\r\nimport MongoDB from '@querybuilder/mongodb';"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Adapters",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Adapters",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Adapters"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "namespace",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "QueryBuilder.Extensions"
            },
            {
              "title": "description",
              "description": "Extensiones y funcionalidades adicionales del core\r\nFunciones auxiliares y métodos de utilidad",
              "lineNumber": 2
            },
            {
              "title": "memberof",
              "description": "QueryBuilder",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 0,
              "index": 5852
            },
            "end": {
              "line": 173,
              "column": 3,
              "index": 6225
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0,
                "index": 6990
              },
              "end": {
                "line": 2903,
                "column": 1,
                "index": 107040
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Funciones extendidas\r\nqb.concat(['first_name', 'last_name'], 'full_name');\r\nqb.coalesce(['phone', 'mobile', 'email'], 'contact');\r\nqb.limitOffset(10, 20);"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "namespace",
          "name": "QueryBuilder.Extensions",
          "memberof": "QueryBuilder",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "QueryBuilder",
              "kind": "file"
            },
            {
              "name": "QueryBuilder.Extensions",
              "kind": "namespace"
            }
          ],
          "namespace": "QueryBuilderQueryBuilder.Extensions"
        }
      ]
    },
    "path": [
      {
        "name": "QueryBuilder"
      }
    ],
    "namespace": "QueryBuilder"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Cuando se llama a una funcion"
            }
          ]
        }
      ]
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 237,
        "column": 4,
        "index": 8316
      },
      "end": {
        "line": 239,
        "column": 7,
        "index": 8366
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 8372
        },
        "end": {
          "line": 287,
          "column": 5,
          "index": 9925
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\querybuilder.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "original",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "original"
      }
    ],
    "namespace": "original"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Funciones de utilidad, extensiones de String.prototype, validaciones de tipos,\r\nformateo de fechas y funciones auxiliares para el funcionamiento del QueryBuilder."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "fileoverview",
        "description": "Utilidades centrales para QueryBuilder",
        "lineNumber": 1
      },
      {
        "title": "description",
        "description": "Funciones de utilidad, extensiones de String.prototype, validaciones de tipos,\r\nformateo de fechas y funciones auxiliares para el funcionamiento del QueryBuilder.",
        "lineNumber": 2
      },
      {
        "title": "version",
        "description": "2.0.0",
        "lineNumber": 4
      },
      {
        "title": "author",
        "description": "QueryBuilder Team",
        "lineNumber": 5
      },
      {
        "title": "license",
        "description": "MIT",
        "lineNumber": 6
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "import { dataTypes, Types, check, formatDate, log } from './utils.js';\r\n\r\n// Convertir tipo de datos\r\nconst postgresType = 'VARCHAR(255)'.toDataType('postgresql');\r\n\r\n// Validar palabra reservada\r\nconst isReserved = 'SELECT'.isReserved(); // true\r\n\r\n// Formatear fecha\r\nconst formatted = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 20,
        "column": 3,
        "index": 710
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0,
          "index": 712
        },
        "end": {
          "line": 21,
          "column": 50,
          "index": 762
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import { dataTypes, Types, check, formatDate, log } from './utils.js';\r\n\r\n// Convertir tipo de datos\r\nconst postgresType = 'VARCHAR(255)'.toDataType('postgresql');\r\n\r\n// Validar palabra reservada\r\nconst isReserved = 'SELECT'.isReserved(); // true\r\n\r\n// Formatear fecha\r\nconst formatted = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "file",
    "version": "2.0.0",
    "author": "QueryBuilder Team",
    "license": "MIT",
    "since": "1.0.0",
    "name": "dataTypes",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dataTypes",
        "kind": "file"
      }
    ],
    "namespace": "dataTypes"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Diccionario completo que mapea tipos de datos SQL estándar (SQL2006)\r\na sus equivalentes específicos en diferentes SGBDs (MySQL, PostgreSQL, MongoDB, etc.).\r\nLa clave principal es el tipo soportado por SQL2006, las secundarias son las variaciones de cada implementación.\r\nTodas las claves están en minúscula para consistencia."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "fileoverview",
        "description": "Mapeo de tipos de datos SQL2006 a implementaciones específicas",
        "lineNumber": 1
      },
      {
        "title": "description",
        "description": "Diccionario completo que mapea tipos de datos SQL estándar (SQL2006) \r\na sus equivalentes específicos en diferentes SGBDs (MySQL, PostgreSQL, MongoDB, etc.).\r\nLa clave principal es el tipo soportado por SQL2006, las secundarias son las variaciones de cada implementación.\r\nTodas las claves están en minúscula para consistencia.",
        "lineNumber": 2
      },
      {
        "title": "version",
        "description": "2.0.0",
        "lineNumber": 6
      },
      {
        "title": "author",
        "description": "QueryBuilder Team",
        "lineNumber": 7
      },
      {
        "title": "license",
        "description": "MIT",
        "lineNumber": 8
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "import { dataTypes } from './dataTypes.js';\r\n\r\n// Obtener tipo específico para MySQL\r\nconst mysqlType = dataTypes.VARCHAR.mysql; // 'VARCHAR'\r\nconst mongoType = dataTypes.VARCHAR.mongobd; // 'string'\r\n\r\n// Usar con String.prototype.toDataType()\r\nconst converted = 'INTEGER'.toDataType('postgresql'); // 'INTEGER'",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 20,
        "column": 3,
        "index": 877
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 50,
          "column": 0,
          "index": 1810
        },
        "end": {
          "line": 413,
          "column": 2,
          "index": 7926
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\dataTypes.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import { dataTypes } from './dataTypes.js';\r\n\r\n// Obtener tipo específico para MySQL\r\nconst mysqlType = dataTypes.VARCHAR.mysql; // 'VARCHAR'\r\nconst mongoType = dataTypes.VARCHAR.mongobd; // 'string'\r\n\r\n// Usar con String.prototype.toDataType()\r\nconst converted = 'INTEGER'.toDataType('postgresql'); // 'INTEGER'"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "file",
    "version": "2.0.0",
    "author": "QueryBuilder Team",
    "license": "MIT",
    "since": "1.0.0",
    "name": "dataTypes",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dataTypes",
        "kind": "file"
      }
    ],
    "namespace": "dataTypes"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "La clave principal es el tipo soportado por SQL2006\r\nlas secundarias son las variaciones de cada implementacion\r\nlas claves siempre en minuscula."
            }
          ]
        }
      ]
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 22,
        "column": 0,
        "index": 881
      },
      "end": {
        "line": 26,
        "column": 3,
        "index": 1045
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 50,
          "column": 0,
          "index": 1810
        },
        "end": {
          "line": 413,
          "column": 2,
          "index": 7926
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\dataTypes.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "dataTypes",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dataTypes",
        "kind": "constant"
      }
    ],
    "namespace": "dataTypes"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Objeto que contiene el mapeo de tipos de datos SQL estándar a sus equivalentes\r\nen diferentes sistemas de gestión de bases de datos."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "dataTypes"
      },
      {
        "title": "description",
        "description": "Objeto que contiene el mapeo de tipos de datos SQL estándar a sus equivalentes\r\nen diferentes sistemas de gestión de bases de datos.",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "// Tipos de caracteres\r\ndataTypes.VARCHAR.mysql      // 'VARCHAR'\r\ndataTypes.VARCHAR.postgresql // 'VARCHAR' \r\ndataTypes.VARCHAR.mongobd    // 'string'\r\n\r\n// Tipos numéricos\r\ndataTypes.INTEGER.mysql      // 'INT'\r\ndataTypes.INTEGER.postgresql // 'INTEGER'\r\ndataTypes.INTEGER.mongobd    // 'int'\r\n\r\n// Tipos de fecha\r\ndataTypes.DATE.mysql         // 'DATE'\r\ndataTypes.DATE.postgresql    // 'DATE'\r\ndataTypes.DATE.mongobd       // 'date'",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 1049
      },
      "end": {
        "line": 49,
        "column": 3,
        "index": 1808
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 50,
          "column": 0,
          "index": 1810
        },
        "end": {
          "line": 413,
          "column": 2,
          "index": 7926
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\dataTypes.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Tipos de caracteres\r\ndataTypes.VARCHAR.mysql      // 'VARCHAR'\r\ndataTypes.VARCHAR.postgresql // 'VARCHAR' \r\ndataTypes.VARCHAR.mongobd    // 'string'\r\n\r\n// Tipos numéricos\r\ndataTypes.INTEGER.mysql      // 'INT'\r\ndataTypes.INTEGER.postgresql // 'INTEGER'\r\ndataTypes.INTEGER.mongobd    // 'int'\r\n\r\n// Tipos de fecha\r\ndataTypes.DATE.mysql         // 'DATE'\r\ndataTypes.DATE.postgresql    // 'DATE'\r\ndataTypes.DATE.mongobd       // 'date'"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "dataTypes",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "dataTypes",
        "kind": "namespace"
      }
    ],
    "namespace": "dataTypes"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Divide un comando SQL extrayendo la parte principal y los parámetros"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "splitCommand"
      },
      {
        "title": "param",
        "description": "Comando SQL con posibles parámetros entre paréntesis",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "value"
      },
      {
        "title": "returns",
        "description": "Array con [comando_principal, parámetros_completos]",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "const [command, params] = splitCommand('VARCHAR(255)');\r\n// command: 'VARCHAR', params: 'VARCHAR(255)'",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 1025
      },
      "end": {
        "line": 37,
        "column": 3,
        "index": 1435
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 38,
          "column": 0,
          "index": 1437
        },
        "end": {
          "line": 47,
          "column": 1,
          "index": 1692
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const [command, params] = splitCommand('VARCHAR(255)');\r\n// command: 'VARCHAR', params: 'VARCHAR(255)'"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Comando SQL con posibles parámetros entre paréntesis"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array con [comando_principal, parámetros_completos]"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "splitCommand",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "splitCommand",
        "kind": "function"
      }
    ],
    "namespace": "splitCommand"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extensión de String que permite convertir tipos de datos SQL estándar\r\na sus equivalentes específicos de cada SGBD."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "String.prototype.toDataType"
      },
      {
        "title": "param",
        "description": "Nombre del lenguaje objetivo ('mysql', 'postgresql', 'mongodb', etc.)",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "target"
      },
      {
        "title": "returns",
        "description": "Tipo de datos convertido o Error si no se encuentra",
        "lineNumber": 4,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Error"
            }
          ]
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 5
      },
      {
        "title": "description",
        "description": "Extensión de String que permite convertir tipos de datos SQL estándar\r\na sus equivalentes específicos de cada SGBD.",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "const mysqlType = 'VARCHAR(255)'.toDataType('mysql');\r\nconst postgresType = 'INTEGER'.toDataType('postgresql'); \r\nconst mongoType = 'STRING'.toDataType('mongodb');",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 48,
        "column": 0,
        "index": 1694
      },
      "end": {
        "line": 60,
        "column": 3,
        "index": 2339
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 61,
          "column": 0,
          "index": 2341
        },
        "end": {
          "line": 94,
          "column": 2,
          "index": 3450
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const mysqlType = 'VARCHAR(255)'.toDataType('mysql');\r\nconst postgresType = 'INTEGER'.toDataType('postgresql'); \r\nconst mongoType = 'STRING'.toDataType('mongodb');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "target",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del lenguaje objetivo ('mysql', 'postgresql', 'mongodb', etc.)"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Tipo de datos convertido o Error si no se encuentra"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "Error"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "String.prototype.toDataType",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "String.prototype.toDataType",
        "kind": "function"
      }
    ],
    "namespace": "String.prototype.toDataType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extensión de String que verifica si una cadena es una palabra reservada SQL.\r\nLa verificación es case-insensitive."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "String.prototype.isReserved"
      },
      {
        "title": "returns",
        "description": "true si la palabra es reservada, false en caso contrario",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 4
      },
      {
        "title": "description",
        "description": "Extensión de String que verifica si una cadena es una palabra reservada SQL.\r\nLa verificación es case-insensitive.",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "const isReserved1 = 'SELECT'.isReserved(); // true\r\nconst isReserved2 = 'mycolumn'.isReserved(); // false\r\nconst isReserved3 = 'where'.isReserved(); // true",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 96,
        "column": 0,
        "index": 3454
      },
      "end": {
        "line": 107,
        "column": 3,
        "index": 3964
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 108,
          "column": 0,
          "index": 3966
        },
        "end": {
          "line": 113,
          "column": 2,
          "index": 4158
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const isReserved1 = 'SELECT'.isReserved(); // true\r\nconst isReserved2 = 'mycolumn'.isReserved(); // false\r\nconst isReserved3 = 'where'.isReserved(); // true"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "true si la palabra es reservada, false en caso contrario"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "String.prototype.isReserved",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "String.prototype.isReserved",
        "kind": "function"
      }
    ],
    "namespace": "String.prototype.isReserved"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extensión de String para formatear texto en Capital Case."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "String.prototype.toCapital"
      },
      {
        "title": "returns",
        "description": "Cadena con formato Capital Case",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 4
      },
      {
        "title": "description",
        "description": "Extensión de String para formatear texto en Capital Case.",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "const formatted1 = 'hello world'.toCapital(); // 'Hello world'\r\nconst formatted2 = 'JAVASCRIPT'.toCapital(); // 'Javascript'",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 115,
        "column": 0,
        "index": 4162
      },
      "end": {
        "line": 124,
        "column": 3,
        "index": 4568
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 125,
          "column": 0,
          "index": 4570
        },
        "end": {
          "line": 127,
          "column": 2,
          "index": 4712
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const formatted1 = 'hello world'.toCapital(); // 'Hello world'\r\nconst formatted2 = 'JAVASCRIPT'.toCapital(); // 'Javascript'"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Cadena con formato Capital Case"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "String.prototype.toCapital",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "String.prototype.toCapital",
        "kind": "function"
      }
    ],
    "namespace": "String.prototype.toCapital"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Función de validación que verifica que los valores proporcionados\r\ncumplan con los tipos especificados en el formato."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "check"
      },
      {
        "title": "param",
        "description": "Formato de validación con sintaxis especial",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "format"
      },
      {
        "title": "param",
        "description": "Valores a validar",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": "true si todos los valores cumplen el formato, false en caso contrario",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 6
      },
      {
        "title": "description",
        "description": "Función de validación que verifica que los valores proporcionados\r\ncumplan con los tipos especificados en el formato.",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "const isValid = check('(name:String, age:Number, items:Array)', ['John', 25, [1,2,3]]);\r\n// Valida que el primer valor sea String, segundo Number, tercero Array",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 128,
        "column": 0,
        "index": 4714
      },
      "end": {
        "line": 140,
        "column": 3,
        "index": 5344
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 141,
          "column": 0,
          "index": 5346
        },
        "end": {
          "line": 187,
          "column": 1,
          "index": 6747
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const isValid = check('(name:String, age:Number, items:Array)', ['John', 25, [1,2,3]]);\r\n// Valida que el primer valor sea String, segundo Number, tercero Array"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "format",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Formato de validación con sintaxis especial"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "values",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Valores a validar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "true si todos los valores cumplen el formato, false en caso contrario"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "check",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "check",
        "kind": "function"
      }
    ],
    "namespace": "check"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Función reemplazadora para JSON.stringify que maneja objetos RegExp\r\nconvirtiéndolos en objetos serializables."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "jsonReplacer"
      },
      {
        "title": "param",
        "description": "Clave del objeto",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "key"
      },
      {
        "title": "param",
        "description": "Valor a serializar",
        "lineNumber": 4,
        "type": {
          "type": "AllLiteral"
        },
        "name": "value"
      },
      {
        "title": "returns",
        "description": "Valor modificado para serialización JSON",
        "lineNumber": 5,
        "type": {
          "type": "AllLiteral"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 6
      },
      {
        "title": "description",
        "description": "Función reemplazadora para JSON.stringify que maneja objetos RegExp\r\nconvirtiéndolos en objetos serializables.",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "const obj = { pattern: /test/gi };\r\nconst json = JSON.stringify(obj, jsonReplacer);",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 189,
        "column": 0,
        "index": 6751
      },
      "end": {
        "line": 201,
        "column": 3,
        "index": 7240
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 202,
          "column": 0,
          "index": 7242
        },
        "end": {
          "line": 207,
          "column": 1,
          "index": 7405
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const obj = { pattern: /test/gi };\r\nconst json = JSON.stringify(obj, jsonReplacer);"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Clave del objeto"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Valor a serializar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "AllLiteral"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Valor modificado para serialización JSON"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "AllLiteral"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "jsonReplacer",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "jsonReplacer",
        "kind": "function"
      }
    ],
    "namespace": "jsonReplacer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Función reviver para JSON.parse que restaura objetos RegExp\r\ndesde su representación serializable."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "jsonReviver"
      },
      {
        "title": "param",
        "description": "Clave del objeto",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "key"
      },
      {
        "title": "param",
        "description": "Valor a deserializar",
        "lineNumber": 4,
        "type": {
          "type": "AllLiteral"
        },
        "name": "value"
      },
      {
        "title": "returns",
        "description": "Valor restaurado desde JSON",
        "lineNumber": 5,
        "type": {
          "type": "AllLiteral"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 6
      },
      {
        "title": "description",
        "description": "Función reviver para JSON.parse que restaura objetos RegExp\r\ndesde su representación serializable.",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "const obj = JSON.parse(jsonString, jsonReviver);\r\n// Los objetos RegExp son restaurados correctamente",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 209,
        "column": 0,
        "index": 7409
      },
      "end": {
        "line": 221,
        "column": 3,
        "index": 7889
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 222,
          "column": 0,
          "index": 7891
        },
        "end": {
          "line": 227,
          "column": 1,
          "index": 8022
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const obj = JSON.parse(jsonString, jsonReviver);\r\n// Los objetos RegExp son restaurados correctamente"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Clave del objeto"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "value",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Valor a deserializar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "AllLiteral"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Valor restaurado desde JSON"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "AllLiteral"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "jsonReviver",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "jsonReviver",
        "kind": "function"
      }
    ],
    "namespace": "jsonReviver"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determina si un valor es un objeto JavaScript puro (no array, null, etc.)"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "isJSObject"
      },
      {
        "title": "param",
        "description": "Valor a verificar",
        "lineNumber": 3,
        "type": {
          "type": "AllLiteral"
        },
        "name": "target"
      },
      {
        "title": "returns",
        "description": "true si es un objeto JavaScript puro, false en caso contrario",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 5
      },
      {
        "title": "description",
        "description": "Determina si un valor es un objeto JavaScript puro (no array, null, etc.)",
        "lineNumber": 6
      },
      {
        "title": "example",
        "description": "const isObj1 = isJSObject({}); // true\r\nconst isObj2 = isJSObject([]); // false\r\nconst isObj3 = isJSObject(null); // false",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 229,
        "column": 0,
        "index": 8026
      },
      "end": {
        "line": 240,
        "column": 3,
        "index": 8494
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 241,
          "column": 0,
          "index": 8496
        },
        "end": {
          "line": 246,
          "column": 1,
          "index": 8651
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const isObj1 = isJSObject({}); // true\r\nconst isObj2 = isJSObject([]); // false\r\nconst isObj3 = isJSObject(null); // false"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "target",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Valor a verificar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "AllLiteral"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "true si es un objeto JavaScript puro, false en caso contrario"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "isJSObject",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isJSObject",
        "kind": "function"
      }
    ],
    "namespace": "isJSObject"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Controla si se muestran los logs de depuración"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 248,
        "column": 0,
        "index": 8655
      },
      "end": {
        "line": 251,
        "column": 3,
        "index": 8734
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 252,
          "column": 0,
          "index": 8736
        },
        "end": {
          "line": 252,
          "column": 23,
          "index": 8759
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "NameExpression",
      "name": "boolean"
    },
    "name": "showLogs",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "showLogs",
        "kind": "constant"
      }
    ],
    "namespace": "showLogs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Función de logging que se activa solo cuando showLogs es true.\r\nSoporta múltiples comandos en array y formateo especial."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "log"
      },
      {
        "title": "param",
        "description": "Comando o array de comandos para el log",
        "lineNumber": 3,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "command"
      },
      {
        "title": "param",
        "description": "Texto adicional del log",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "text",
        "default": "\"\""
      },
      {
        "title": "param",
        "description": "Datos adicionales para mostrar",
        "lineNumber": 5,
        "type": {
          "type": "RestType",
          "expression": {
            "type": "AllLiteral"
          }
        },
        "name": "data"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "void"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 7
      },
      {
        "title": "description",
        "description": "Función de logging que se activa solo cuando showLogs es true.\r\nSoporta múltiples comandos en array y formateo especial.",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "log('SQL', 'Ejecutando query', { query: 'SELECT * FROM users' });\r\nlog(['DB', 'CONN'], 'Conectando a base de datos');",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 254,
        "column": 0,
        "index": 8763
      },
      "end": {
        "line": 267,
        "column": 3,
        "index": 9352
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 268,
          "column": 0,
          "index": 9354
        },
        "end": {
          "line": 277,
          "column": 1,
          "index": 9651
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "log('SQL', 'Ejecutando query', { query: 'SELECT * FROM users' });\r\nlog(['DB', 'CONN'], 'Conectando a base de datos');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "command",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Comando o array de comandos para el log"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "text",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Texto adicional del log"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "default": "\"\""
      },
      {
        "title": "param",
        "name": "data",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Datos adicionales para mostrar"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "RestType",
          "expression": {
            "type": "AllLiteral"
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "void"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "log",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "log",
        "kind": "function"
      }
    ],
    "namespace": "log"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Tokens soportados:"
            }
          ]
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "spread": false,
          "children": [
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "YYYY: Año completo (2025)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "YY: Año de 2 dígitos (25)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MMMM: Nombre completo del mes (October)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MMM: Nombre corto del mes (Oct)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "MM: Mes con 2 dígitos (10)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "M: Mes sin ceros (10)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "DD: Día con 2 dígitos (02)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "D: Día sin ceros (2)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "dddd: Nombre completo del día (Wednesday)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "ddd: Nombre corto del día (Wed)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "HH: Hora 24h con 2 dígitos (14)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "H: Hora 24h sin ceros (14)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "hh: Hora 12h con 2 dígitos (02)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "h: Hora 12h sin ceros (2)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "mm: Minutos con 2 dígitos (30)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "m: Minutos sin ceros (30)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "ss: Segundos con 2 dígitos (15)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "s: Segundos sin ceros (15)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "A: AM/PM mayúscula"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "a: am/pm minúscula"
                    }
                  ]
                }
              ]
            },
            {
              "type": "listItem",
              "spread": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Z: Zona horaria"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "function",
        "description": null,
        "lineNumber": 2,
        "name": "formatDate"
      },
      {
        "title": "param",
        "description": "Objeto Date a formatear",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "Date"
        },
        "name": "date"
      },
      {
        "title": "param",
        "description": "Patrón de formato con tokens específicos",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "format"
      },
      {
        "title": "returns",
        "description": "Fecha formateada según el patrón",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 6
      },
      {
        "title": "description",
        "description": "Formatea fechas usando tokens de reemplazo similares a moment.js.\r\nSoporta tokens para año, mes, día, hora, minutos, segundos y zona horaria.",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "const formatted1 = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\r\n// '2025-10-02 14:30:15'\r\n\r\nconst formatted2 = formatDate(new Date(), 'DD/MM/YYYY hh:mm A');\r\n// '02/10/2025 02:30 PM'\r\n\r\nconst formatted3 = formatDate(new Date(), 'dddd, MMMM D, YYYY');\r\n// 'Wednesday, October 2, 2025'",
        "lineNumber": 9
      },
      {
        "title": "description",
        "description": "Tokens soportados:\r\n- YYYY: Año completo (2025)\r\n- YY: Año de 2 dígitos (25)\r\n- MMMM: Nombre completo del mes (October)\r\n- MMM: Nombre corto del mes (Oct)\r\n- MM: Mes con 2 dígitos (10)\r\n- M: Mes sin ceros (10)\r\n- DD: Día con 2 dígitos (02)\r\n- D: Día sin ceros (2)\r\n- dddd: Nombre completo del día (Wednesday)\r\n- ddd: Nombre corto del día (Wed)\r\n- HH: Hora 24h con 2 dígitos (14)\r\n- H: Hora 24h sin ceros (14)\r\n- hh: Hora 12h con 2 dígitos (02)\r\n- h: Hora 12h sin ceros (2)\r\n- mm: Minutos con 2 dígitos (30)\r\n- m: Minutos sin ceros (30)\r\n- ss: Segundos con 2 dígitos (15)\r\n- s: Segundos sin ceros (15)\r\n- A: AM/PM mayúscula\r\n- a: am/pm minúscula\r\n- Z: Zona horaria",
        "lineNumber": 19
      }
    ],
    "loc": {
      "start": {
        "line": 279,
        "column": 0,
        "index": 9655
      },
      "end": {
        "line": 320,
        "column": 3,
        "index": 11165
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 321,
          "column": 0,
          "index": 11167
        },
        "end": {
          "line": 351,
          "column": 1,
          "index": 13160
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\utils\\utils.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const formatted1 = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\r\n// '2025-10-02 14:30:15'\r\n\r\nconst formatted2 = formatDate(new Date(), 'DD/MM/YYYY hh:mm A');\r\n// '02/10/2025 02:30 PM'\r\n\r\nconst formatted3 = formatDate(new Date(), 'dddd, MMMM D, YYYY');\r\n// 'Wednesday, October 2, 2025'"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "date",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Objeto Date a formatear"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Date"
        }
      },
      {
        "title": "param",
        "name": "format",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Patrón de formato con tokens específicos"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Fecha formateada según el patrón"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "formatDate",
    "since": "1.0.0",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "formatDate",
        "kind": "function"
      }
    ],
    "namespace": "formatDate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Charset latino predeterminado"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 140,
        "column": 2,
        "index": 5162
      },
      "end": {
        "line": 143,
        "column": 5,
        "index": 5229
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 144,
          "column": 2,
          "index": 5233
        },
        "end": {
          "line": 144,
          "column": 19,
          "index": 5250
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "NameExpression",
      "name": "string"
    },
    "name": "latino",
    "memberof": "Types.charset",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "latino",
        "scope": "static"
      }
    ],
    "namespace": ".latino"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Define tipos de datos, validadores de identificadores SQL y configuraciones de charset.\r\nProporciona funcionalidades para validar identificadores SQL regulares y delimitados."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "fileoverview",
        "description": "Sistema de tipos y validaciones para QueryBuilder",
        "lineNumber": 1
      },
      {
        "title": "description",
        "description": "Define tipos de datos, validadores de identificadores SQL y configuraciones de charset.\r\nProporciona funcionalidades para validar identificadores SQL regulares y delimitados.",
        "lineNumber": 2
      },
      {
        "title": "version",
        "description": "2.0.0",
        "lineNumber": 4
      },
      {
        "title": "author",
        "description": "QueryBuilder Team",
        "lineNumber": 5
      },
      {
        "title": "license",
        "description": "MIT",
        "lineNumber": 6
      },
      {
        "title": "since",
        "description": "1.0.0",
        "lineNumber": 7
      },
      {
        "title": "example",
        "description": "import Types from './Type.js';\r\n\r\n// Configurar validación de identificadores\r\nTypes.identificador.set('regular');\r\n\r\n// Usar extensión de String\r\ntry {\r\n  const validId = 'user_name'.validSqlId(); // 'user_name'\r\n  const invalidId = 'SELECT'.validSqlId(); // Throws Error\r\n} catch (error) {\r\n  console.log(error.message);\r\n}",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 22,
        "column": 3,
        "index": 730
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 32,
          "column": 0,
          "index": 1036
        },
        "end": {
          "line": 146,
          "column": 2,
          "index": 5260
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import Types from './Type.js';\r\n\r\n// Configurar validación de identificadores\r\nTypes.identificador.set('regular');\r\n\r\n// Usar extensión de String\r\ntry {\r\n  const validId = 'user_name'.validSqlId(); // 'user_name'\r\n  const invalidId = 'SELECT'.validSqlId(); // Throws Error\r\n} catch (error) {\r\n  console.log(error.message);\r\n}"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "file",
    "version": "2.0.0",
    "author": "QueryBuilder Team",
    "license": "MIT",
    "since": "1.0.0",
    "name": "Types",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Types",
        "kind": "file"
      }
    ],
    "namespace": "Types"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Objeto que contiene configuraciones de tipos, validadores de identificadores\r\ny funciones de validación para diferentes aspectos del QueryBuilder."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "Types"
      },
      {
        "title": "description",
        "description": "Objeto que contiene configuraciones de tipos, validadores de identificadores\r\ny funciones de validación para diferentes aspectos del QueryBuilder.",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 784
      },
      "end": {
        "line": 31,
        "column": 3,
        "index": 1034
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 32,
          "column": 0,
          "index": 1036
        },
        "end": {
          "line": 146,
          "column": 2,
          "index": 5260
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "Types",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Types",
        "kind": "namespace"
      }
    ],
    "namespace": "Types"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Proporciona validadores para identificadores SQL regulares y delimitados"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "Types.identificador"
      },
      {
        "title": "description",
        "description": "Proporciona validadores para identificadores SQL regulares y delimitados",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 33,
        "column": 1,
        "index": 1054
      },
      "end": {
        "line": 37,
        "column": 4,
        "index": 1247
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 38,
          "column": 1,
          "index": 1250
        },
        "end": {
          "line": 132,
          "column": 2,
          "index": 4970
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "Types.identificador",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Types.identificador",
        "kind": "namespace"
      }
    ],
    "namespace": "Types.identificador"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Configura la extensión String.prototype.validSqlId según el tipo especificado"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "set"
      },
      {
        "title": "param",
        "description": "Tipo de validación ('regular' o 'delimitado')",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "type"
      },
      {
        "title": "description",
        "description": "Configura la extensión String.prototype.validSqlId según el tipo especificado",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "Types.identificador.set('regular');\r\n// Ahora todos los strings tienen el método validSqlId para validación regular",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 39,
        "column": 2,
        "index": 1270
      },
      "end": {
        "line": 47,
        "column": 5,
        "index": 1676
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 48,
          "column": 2,
          "index": 1680
        },
        "end": {
          "line": 50,
          "column": 3,
          "index": 1761
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Types.identificador.set('regular');\r\n// Ahora todos los strings tienen el método validSqlId para validación regular"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "type",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Tipo de validación ('regular' o 'delimitado')"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "set",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "set",
        "kind": "function"
      }
    ],
    "namespace": "set"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Valida identificadores que siguen las reglas estándar SQL (alfanuméricos, guión bajo, no palabras reservadas)"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "Types.identificador.regular"
      },
      {
        "title": "description",
        "description": "Valida identificadores que siguen las reglas estándar SQL (alfanuméricos, guión bajo, no palabras reservadas)",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 52,
        "column": 2,
        "index": 1768
      },
      "end": {
        "line": 56,
        "column": 5,
        "index": 2003
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 57,
          "column": 2,
          "index": 2007
        },
        "end": {
          "line": 95,
          "column": 3,
          "index": 3556
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "Types.identificador.regular",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Types.identificador.regular",
        "kind": "namespace"
      }
    ],
    "namespace": "Types.identificador.regular"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Verifica que el identificador contenga solo caracteres alfanuméricos y guiones bajos,\r\ny que no sea una palabra reservada SQL."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "isValid"
      },
      {
        "title": "returns",
        "description": "El identificador si es válido",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "throws",
        "description": "Si el identificador no es válido",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "description",
        "description": "Verifica que el identificador contenga solo caracteres alfanuméricos y guiones bajos,\r\ny que no sea una palabra reservada SQL.",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "const valid = Types.identificador.regular.isValid.call('user_name'); // 'user_name'\r\nconst invalid = Types.identificador.regular.isValid.call('SELECT'); // Throws Error",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 58,
        "column": 3,
        "index": 2022
      },
      "end": {
        "line": 68,
        "column": 6,
        "index": 2584
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 69,
          "column": 3,
          "index": 2589
        },
        "end": {
          "line": 77,
          "column": 4,
          "index": 2821
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const valid = Types.identificador.regular.isValid.call('user_name'); // 'user_name'\r\nconst invalid = Types.identificador.regular.isValid.call('SELECT'); // Throws Error"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "El identificador si es válido"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Si el identificador no es válido"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "isValid",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isValid",
        "kind": "function"
      }
    ],
    "namespace": "isValid"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Verifica que el identificador esté rodeado por comillas dobles"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "isValid"
      },
      {
        "title": "returns",
        "description": "El identificador si es válido",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "throws",
        "description": "Si el identificador no está correctamente delimitado",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "description",
        "description": "Verifica que el identificador esté rodeado por comillas dobles",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "const valid = Types.identificador.delimitado.isValid.call('\"user name\"'); // '\"user name\"'\r\nconst invalid = Types.identificador.delimitado.isValid.call('user name'); // Throws Error",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 103,
        "column": 3,
        "index": 3780
      },
      "end": {
        "line": 112,
        "column": 6,
        "index": 4308
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 113,
          "column": 3,
          "index": 4313
        },
        "end": {
          "line": 118,
          "column": 4,
          "index": 4484
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const valid = Types.identificador.delimitado.isValid.call('\"user name\"'); // '\"user name\"'\r\nconst invalid = Types.identificador.delimitado.isValid.call('user name'); // Throws Error"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "El identificador si es válido"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Si el identificador no está correctamente delimitado"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "isValid",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "isValid",
        "kind": "function"
      }
    ],
    "namespace": "isValid"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Proporciona mensajes de error específicos dependiendo del tipo de problema"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "error"
      },
      {
        "title": "param",
        "description": "Nombre del identificador inválido",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "returns",
        "description": "Mensaje de error descriptivo",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "description",
        "description": "Proporciona mensajes de error específicos dependiendo del tipo de problema",
        "lineNumber": 5
      },
      {
        "title": "example",
        "description": "const errorMsg = Types.identificador.regular.error('SELECT');\r\n// 'el identificador SELECT no puede ser una palabra reservada.'",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 79,
        "column": 3,
        "index": 2829
      },
      "end": {
        "line": 88,
        "column": 6,
        "index": 3304
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 89,
          "column": 3,
          "index": 3309
        },
        "end": {
          "line": 94,
          "column": 4,
          "index": 3550
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const errorMsg = Types.identificador.regular.error('SELECT');\r\n// 'el identificador SELECT no puede ser una palabra reservada.'"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del identificador inválido"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Mensaje de error descriptivo"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "error",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "error",
        "kind": "function"
      }
    ],
    "namespace": "error"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Genera mensaje de error para identificadores delimitados"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": "error"
      },
      {
        "title": "param",
        "description": "Nombre del identificador inválido",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "returns",
        "description": "Mensaje de error descriptivo",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "example",
        "description": "const errorMsg = Types.identificador.delimitado.error('user name');\r\n// 'el identificador 'user name' debe estar entre comillas dobles'",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 120,
        "column": 3,
        "index": 4492
      },
      "end": {
        "line": 128,
        "column": 6,
        "index": 4871
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 129,
          "column": 3,
          "index": 4876
        },
        "end": {
          "line": 130,
          "column": 65,
          "index": 4959
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const errorMsg = Types.identificador.delimitado.error('user name');\r\n// 'el identificador 'user name' debe estar entre comillas dobles'"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del identificador inválido"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Mensaje de error descriptivo"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "error",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "error",
        "kind": "function"
      }
    ],
    "namespace": "error"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Valida identificadores que están delimitados por comillas dobles"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "Types.identificador.delimitado"
      },
      {
        "title": "description",
        "description": "Valida identificadores que están delimitados por comillas dobles",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 97,
        "column": 2,
        "index": 3563
      },
      "end": {
        "line": 101,
        "column": 5,
        "index": 3758
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 102,
          "column": 2,
          "index": 3762
        },
        "end": {
          "line": 131,
          "column": 3,
          "index": 4965
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "Types.identificador.delimitado",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Types.identificador.delimitado",
        "kind": "namespace"
      }
    ],
    "namespace": "Types.identificador.delimitado"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Define mapeos de juegos de caracteres para diferentes bases de datos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "Types.charset"
      },
      {
        "title": "description",
        "description": "Define mapeos de juegos de caracteres para diferentes bases de datos",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 134,
        "column": 1,
        "index": 4976
      },
      "end": {
        "line": 138,
        "column": 4,
        "index": 5145
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 139,
          "column": 1,
          "index": 5148
        },
        "end": {
          "line": 145,
          "column": 2,
          "index": 5255
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "Types.charset",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Types.charset",
        "kind": "namespace"
      }
    ],
    "namespace": "Types.charset"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Exportación por defecto del sistema de tipos"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "description",
        "description": "Exportación por defecto del sistema de tipos",
        "lineNumber": 1
      },
      {
        "title": "exports",
        "description": "Types",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 148,
        "column": 0,
        "index": 5264
      },
      "end": {
        "line": 151,
        "column": 3,
        "index": 5353
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 152,
          "column": 0,
          "index": 5355
        },
        "end": {
          "line": 152,
          "column": 21,
          "index": 5376
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\types\\Type.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Type",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Type"
      }
    ],
    "namespace": "Type"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clase que representa una columna en una consulta SQL."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "Column"
      },
      {
        "title": "param",
        "description": "Nombre de la columna o una instancia de QueryBuilder para subconsultas.",
        "lineNumber": 3,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Nombre de la tabla a la que pertenece la columna.",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "table"
      },
      {
        "title": "param",
        "description": "Tipo de dato de la columna.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "dataType"
      },
      {
        "title": "param",
        "description": "Tipo de dato específico.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "type"
      },
      {
        "title": "example",
        "description": "const col1 = new Column('id', 'users', 'integer');\r\nconst col2 = new Column('name', 'users', 'string').as('username');\r\nconst subquery = new QueryBuilder().select('id').from('orders').where('user_id', '=', 1);\r\nconst col3 = new Column(subquery, null, 'integer').as('order_id');",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0,
        "index": 227
      },
      "end": {
        "line": 21,
        "column": 3,
        "index": 922
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 22,
          "column": 0,
          "index": 924
        },
        "end": {
          "line": 123,
          "column": 1,
          "index": 3708
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const col1 = new Column('id', 'users', 'integer');\r\nconst col2 = new Column('name', 'users', 'string').as('username');\r\nconst subquery = new QueryBuilder().select('id').from('orders').where('user_id', '=', 1);\r\nconst col3 = new Column(subquery, null, 'integer').as('order_id');"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la columna o una instancia de QueryBuilder para subconsultas."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "QueryBuilder"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "table",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre de la tabla a la que pertenece la columna."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "param",
        "name": "dataType",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Tipo de dato de la columna."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "param",
        "name": "type",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Tipo de dato específico."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "class",
    "name": "Column",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Devuelve el nombre de la columna"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Nombre de la columna con su alias si existe",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 32,
              "column": 1,
              "index": 1211
            },
            "end": {
              "line": 35,
              "column": 4,
              "index": 1325
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 36,
                "column": 1,
                "index": 1328
              },
              "end": {
                "line": 61,
                "column": 2,
                "index": 2183
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Nombre de la columna con su alias si existe"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "toString",
          "kind": "function",
          "memberof": "Column",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "toString",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Column#toString"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Establece el tipo de dato de la columna"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "typo de dato",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "value"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 80,
              "column": 1,
              "index": 2689
            },
            "end": {
              "line": 84,
              "column": 4,
              "index": 2808
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 85,
                "column": 1,
                "index": 2811
              },
              "end": {
                "line": 88,
                "column": 2,
                "index": 2893
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "typo de dato"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "type",
          "kind": "function",
          "memberof": "Column",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "type",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Column#type"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Establece el nombre de la tabla asociada al campo"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "table"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 1,
              "index": 2896
            },
            "end": {
              "line": 93,
              "column": 4,
              "index": 3010
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 94,
                "column": 1,
                "index": 3013
              },
              "end": {
                "line": 97,
                "column": 2,
                "index": 3070
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "table",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "from",
          "kind": "function",
          "memberof": "Column",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "from",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Column#from"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Establece un cambio de type para la columna"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "nuevo tipo",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "value"
            },
            {
              "title": "returns",
              "description": "La instancia actual de Column para encadenamiento",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 98,
              "column": 1,
              "index": 3073
            },
            "end": {
              "line": 102,
              "column": 4,
              "index": 3244
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 103,
                "column": 1,
                "index": 3247
              },
              "end": {
                "line": 106,
                "column": 2,
                "index": 3329
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "nuevo tipo"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "La instancia actual de Column para encadenamiento"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "cast",
          "kind": "function",
          "memberof": "Column",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "cast",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Column#cast"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Convierte el valor de la columna a mayúsculas"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "El valor de la columna en mayúsculas",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 108,
              "column": 1,
              "index": 3334
            },
            "end": {
              "line": 111,
              "column": 4,
              "index": 3454
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 112,
                "column": 1,
                "index": 3457
              },
              "end": {
                "line": 114,
                "column": 2,
                "index": 3517
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "El valor de la columna en mayúsculas"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "toUpperCase",
          "kind": "function",
          "memberof": "Column",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "toUpperCase",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Column#toUpperCase"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Convierte el valor de la columna a minúsculas"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "El valor de la columna en minúsculas",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 116,
              "column": 1,
              "index": 3522
            },
            "end": {
              "line": 119,
              "column": 4,
              "index": 3642
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 120,
                "column": 1,
                "index": 3645
              },
              "end": {
                "line": 122,
                "column": 2,
                "index": 3705
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "El valor de la columna en minúsculas"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "toLowerCase",
          "kind": "function",
          "memberof": "Column",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "toLowerCase",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Column#toLowerCase"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Establece el alias de la columna"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": "as"
            },
            {
              "title": "memberof",
              "description": "Column",
              "lineNumber": 3
            },
            {
              "title": "param",
              "description": "alias de la columna",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "alias"
            },
            {
              "title": "returns",
              "description": "para encadenamiento",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            },
            {
              "title": "throws",
              "description": "String - Si el alias no es un identificador SQL válido",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            },
            {
              "title": "example",
              "description": "const col = new Column('name').as('username');",
              "lineNumber": 7
            }
          ],
          "loc": {
            "start": {
              "line": 62,
              "column": 1,
              "index": 2186
            },
            "end": {
              "line": 71,
              "column": 4,
              "index": 2505
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 72,
                "column": 1,
                "index": 2508
              },
              "end": {
                "line": 79,
                "column": 2,
                "index": 2686
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\column.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const col = new Column('name').as('username');"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "alias",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "alias de la columna"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "para encadenamiento"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Column"
              }
            }
          ],
          "sees": [],
          "throws": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "String - Si el alias no es un identificador SQL válido"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "todos": [],
          "yields": [],
          "kind": "function",
          "name": "as",
          "memberof": "Column",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Column",
              "kind": "class"
            },
            {
              "name": "as",
              "kind": "function"
            }
          ],
          "namespace": "Columnas"
        }
      ]
    },
    "path": [
      {
        "name": "Column",
        "kind": "class"
      }
    ],
    "namespace": "Column"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clase para manejar cursores en consultas SQL.\r\nPermite declarar, abrir, cerrar y realizar operaciones de fetch en cursores.\r\nSoporta cursores con opciones como SCROLL.\r\nDelega la generación de comandos SQL a un objeto de lenguaje pasado como builder.\r\nDelega la ejecución de comandos SQL a una función pasada como builder."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 6,
        "type": null,
        "name": "Cursor"
      },
      {
        "title": "param",
        "description": "Nombre del cursor.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "name"
      },
      {
        "title": "param",
        "description": "Expresión asociada al cursor.",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Expresion"
        },
        "name": "expresion"
      },
      {
        "title": "param",
        "description": "Opciones del cursor.",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Instancia del QueryBuilder.",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        },
        "name": "builder"
      },
      {
        "title": "param",
        "description": "Función para obtener el siguiente valor.",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Function"
        },
        "name": "next"
      }
    ],
    "loc": {
      "start": {
        "line": 4,
        "column": 0,
        "index": 90
      },
      "end": {
        "line": 16,
        "column": 3,
        "index": 751
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 17,
          "column": 0,
          "index": 753
        },
        "end": {
          "line": 142,
          "column": 1,
          "index": 4229
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "name",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Nombre del cursor."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "expresion",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Expresión asociada al cursor."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Expresion"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Opciones del cursor."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "builder",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Instancia del QueryBuilder."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "QueryBuilder"
        }
      },
      {
        "title": "param",
        "name": "next",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Función para obtener el siguiente valor."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Function"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "class",
    "name": "Cursor",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Abre el cursor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "La instancia del cursor.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Cursor"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 32,
              "column": 1,
              "index": 1200
            },
            "end": {
              "line": 35,
              "column": 4,
              "index": 1280
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 36,
                "column": 1,
                "index": 1283
              },
              "end": {
                "line": 40,
                "column": 2,
                "index": 1392
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "La instancia del cursor."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Cursor"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "open",
          "kind": "function",
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "open",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#open"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Cierra el cursor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Objeto con la propiedad 'q' para agregar comandos adicionales.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "next"
            },
            {
              "title": "returns",
              "description": "La instancia del cursor.",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Cursor"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 41,
              "column": 1,
              "index": 1395
            },
            "end": {
              "line": 45,
              "column": 4,
              "index": 1568
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 46,
                "column": 1,
                "index": 1571
              },
              "end": {
                "line": 54,
                "column": 2,
                "index": 1779
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "next",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Objeto con la propiedad 'q' para agregar comandos adicionales."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "La instancia del cursor."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Cursor"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "close",
          "kind": "function",
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "close",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#close"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Genera métodos de fetch para diferentes direcciones.\r\nSoporta NEXT, PRIOR, FIRST, LAST, ABSOLUTE y RELATIVE."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 55,
              "column": 1,
              "index": 1782
            },
            "end": {
              "line": 58,
              "column": 4,
              "index": 1909
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 59,
                "column": 1,
                "index": 1912
              },
              "end": {
                "line": 89,
                "column": 2,
                "index": 2828
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "fetches",
          "kind": "function",
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "fetches",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#fetches"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Realiza un fetch en el cursor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Variables de host para la consulta.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "hostVars"
            },
            {
              "title": "returns",
              "description": "Comando SQL generado para el fetch.",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 91,
              "column": 1,
              "index": 2833
            },
            "end": {
              "line": 95,
              "column": 4,
              "index": 3007
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 97,
                "column": 1,
                "index": 3012
              },
              "end": {
                "line": 104,
                "column": 2,
                "index": 3228
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "hostVars",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Variables de host para la consulta."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Comando SQL generado para el fetch."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "fetch",
          "kind": "function",
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "fetch",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#fetch"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Agrega un comando al cursor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Comando SQL o instancia de QueryBuilder.",
              "lineNumber": 2,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "NameExpression",
                    "name": "QueryBuilder"
                  }
                ]
              },
              "name": "command"
            },
            {
              "title": "returns",
              "description": "La instancia del cursor.",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Cursor"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 105,
              "column": 1,
              "index": 3231
            },
            "end": {
              "line": 109,
              "column": 4,
              "index": 3410
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 110,
                "column": 1,
                "index": 3413
              },
              "end": {
                "line": 120,
                "column": 2,
                "index": 3687
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "command",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Comando SQL o instancia de QueryBuilder."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "NameExpression",
                    "name": "QueryBuilder"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "La instancia del cursor."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Cursor"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "add",
          "kind": "function",
          "async": true,
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "add",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#add"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Convierte el cursor a una cadena de texto SQL."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Comando SQL completo del cursor.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 121,
              "column": 1,
              "index": 3690
            },
            "end": {
              "line": 124,
              "column": 4,
              "index": 3809
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 125,
                "column": 1,
                "index": 3812
              },
              "end": {
                "line": 134,
                "column": 2,
                "index": 4028
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Comando SQL completo del cursor."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "toString",
          "kind": "function",
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "toString",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#toString"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Ejecuta el cursor utilizando la función de ejecución del builder."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Resultado de la ejecución del cursor.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Promise"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 135,
              "column": 1,
              "index": 4031
            },
            "end": {
              "line": 138,
              "column": 4,
              "index": 4175
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 139,
                "column": 1,
                "index": 4178
              },
              "end": {
                "line": 141,
                "column": 2,
                "index": 4226
              }
            },
            "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\cursor.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Resultado de la ejecución del cursor."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Promise"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "execute",
          "kind": "function",
          "memberof": "Cursor",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cursor",
              "kind": "class"
            },
            {
              "name": "execute",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cursor#execute"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Cursor",
        "kind": "class"
      }
    ],
    "namespace": "Cursor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Esta clase evita que el valor devuelto sea de tipo String"
            }
          ]
        }
      ]
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 3,
        "column": 3,
        "index": 70
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 0,
          "index": 687
        },
        "end": {
          "line": 56,
          "column": 1,
          "index": 1717
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\expresion.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "expresion",
        "lineNumber": 19
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Expresion",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Expresion",
        "kind": "class"
      }
    ],
    "namespace": "Expresion"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Clase que representa una expresión SQL con soporte para alias.\r\nPermite definir una expresión y asignarle un alias opcional.\r\nProporciona métodos para convertir la expresión a mayúsculas o minúsculas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "Expresion"
      },
      {
        "title": "description",
        "description": "Clase que representa una expresión SQL con soporte para alias.\r\nPermite definir una expresión y asignarle un alias opcional.\r\nProporciona métodos para convertir la expresión a mayúsculas o minúsculas.",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "La expresión SQL.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "expresion"
      },
      {
        "title": "returns",
        "description": "Una instancia de la clase Expresion.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Expresion"
        }
      },
      {
        "title": "example",
        "description": "const expr = new Expresion(\"COUNT(*)\").as(\"total\");\r\nconsole.log(expr.toString()); // \"COUNT(*) AS total\"\r\nconsole.log(expr.toUpperCase()); // \"COUNT(*) AS TOTAL\"\r\nconsole.log(expr.toLowerCase()); // \"count(*) as total\"",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0,
        "index": 74
      },
      "end": {
        "line": 17,
        "column": 3,
        "index": 685
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 0,
          "index": 687
        },
        "end": {
          "line": 56,
          "column": 1,
          "index": 1717
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\expresion.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "const expr = new Expresion(\"COUNT(*)\").as(\"total\");\r\nconsole.log(expr.toString()); // \"COUNT(*) AS total\"\r\nconsole.log(expr.toUpperCase()); // \"COUNT(*) AS TOTAL\"\r\nconsole.log(expr.toLowerCase()); // \"count(*) as total\""
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "expresion",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "La expresión SQL."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Una instancia de la clase Expresion."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Expresion"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "class",
    "name": "Expresion",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Expresion",
        "kind": "class"
      }
    ],
    "namespace": "Expresion"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Asigna un alias a la expresión."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "as"
      },
      {
        "title": "description",
        "description": "Asigna un alias a la expresión.",
        "lineNumber": 2
      },
      {
        "title": "param",
        "description": "Asigna un alias a la expresión.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "alias"
      }
    ],
    "loc": {
      "start": {
        "line": 23,
        "column": 1,
        "index": 792
      },
      "end": {
        "line": 27,
        "column": 4,
        "index": 928
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 28,
          "column": 1,
          "index": 931
        },
        "end": {
          "line": 31,
          "column": 2,
          "index": 985
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\expresion.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "alias",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Asigna un alias a la expresión."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "as",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "as",
        "kind": "function"
      }
    ],
    "namespace": "as"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convierte la expresión a una cadena de texto, incluyendo el alias si está definido."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "toString"
      },
      {
        "title": "description",
        "description": "Convierte la expresión a una cadena de texto, incluyendo el alias si está definido.",
        "lineNumber": 2
      },
      {
        "title": "returns",
        "description": "La representación en cadena de la expresión con su alias.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 32,
        "column": 1,
        "index": 988
      },
      "end": {
        "line": 36,
        "column": 4,
        "index": 1202
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 37,
          "column": 1,
          "index": 1205
        },
        "end": {
          "line": 39,
          "column": 2,
          "index": 1302
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\expresion.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "La representación en cadena de la expresión con su alias."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "toString",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toString",
        "kind": "function"
      }
    ],
    "namespace": "toString"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convierte la expresión a mayúsculas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "toUpperCase"
      },
      {
        "title": "description",
        "description": "Convierte la expresión a mayúsculas.",
        "lineNumber": 2
      },
      {
        "title": "returns",
        "description": "La expresión en mayúsculas.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 40,
        "column": 1,
        "index": 1305
      },
      "end": {
        "line": 44,
        "column": 4,
        "index": 1445
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 45,
          "column": 1,
          "index": 1448
        },
        "end": {
          "line": 47,
          "column": 2,
          "index": 1508
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\expresion.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "La expresión en mayúsculas."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "toUpperCase",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toUpperCase",
        "kind": "function"
      }
    ],
    "namespace": "toUpperCase"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Convierte la expresión a minúsculas."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "toLowerCase"
      },
      {
        "title": "description",
        "description": "Convierte la expresión a minúsculas.",
        "lineNumber": 2
      },
      {
        "title": "returns",
        "description": "La expresión en minúsculas.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 48,
        "column": 1,
        "index": 1511
      },
      "end": {
        "line": 52,
        "column": 4,
        "index": 1651
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 53,
          "column": 1,
          "index": 1654
        },
        "end": {
          "line": 55,
          "column": 2,
          "index": 1714
        }
      },
      "file": "D:\\Documentos del Escritorio\\Manuales programacion\\Manuales Tutoriales\\FullStack Developed\\QueryBuilder\\packages\\@querybuilder\\core\\expresion.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "La expresión en minúsculas."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "toLowerCase",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "toLowerCase",
        "kind": "function"
      }
    ],
    "namespace": "toLowerCase"
  }
]